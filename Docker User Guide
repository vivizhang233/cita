#安装docker及docker-compose

sudo apt-get install docker docker-compose  docker.io

国内访问hub.docker.com可采用镜像加速:

sudo cat > /etc/docker/daemon.json  << EOF
{
  "registry-mirror": [ "https://registry.docker-cn.com" ]
}
EOF

#获取CITA镜像
##直接从hub.docker.com拉取

docker pull cryptape/play

##从发布件构建
从二进制发布件构建

wget https://github.com/cryptape/cita/releases/cita-v0.1.0.tar.bz2
tar xf cita-v0.1.0.tar.bz2
cd cita
scripts/build_image_from_binary.sh 

完成后可以通过docker images找到cryptape/play的docker镜像.
##从源码编译生成发布件

git clone http://github.com/cryptape/cita
cd cita
scripts/build_image_from_source.sh 

由于我的电脑内存不足，所以接入了我们内网的服务器，未安装 docker，也省去了获取 CITA 镜像这一步，直接进行下一步

#使用docker-compose部署cita
##准备

mkdir cita
cd cita
wget https://raw.githubusercontent.com/cryptape/cita/develop/scripts/docker-compose.yaml

连接内网后，部署成功：
--2017-10-25 10:57:17--  https://raw.githubusercontent.com/cryptape/cita/develop/scripts/docker-compose.yaml
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.72.133
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.72.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1941 (1.9K) [text/plain]
Saving to: ‘docker-compose.yaml.1’

docker-compose.yaml.1                            100%[=======================================================================================================>]   1.90K  --.-KB/s    in 0s      

2017-10-25 10:57:18 (32.9 MB/s) - ‘docker-compose.yaml.1’ saved [1941/1941]


##生成配置数据

docker-compose run admin

生成配置很顺利，唯一的问题就是日志内容太多，等待时间比较长：

cpt@cryptape-server:~/cita$ docker-compose run admin
Step 1: ********************************************************
Start generating private Key for Node 0 !
[PrivateKey Path] :  /data/node0
End generating private Key for Node 0 !
Start creating Network Node 0 Configuration!
End creating Network Node 0 Configuration!
########################################################
Start generating private Key for Node 1 !
[PrivateKey Path] :  /data/node1
End generating private Key for Node 1 !
Start creating Network Node 1 Configuration!
End creating Network Node 1 Configuration!
########################################################
Start generating private Key for Node 2 !
[PrivateKey Path] :  /data/node2
End generating private Key for Node 2 !
Start creating Network Node 2 Configuration!
End creating Network Node 2 Configuration!
########################################################
Start generating private Key for Node 3 !
[PrivateKey Path] :  /data/node3
End generating private Key for Node 3 !
Start creating Network Node 3 Configuration!
End creating Network Node 3 Configuration!
########################################################
Step 2: ********************************************************
init data {u'0x00000000000000000000000000000000013241a4': [[u'0x1a702a25c6bca72b67987968f0bfb3a3213c5688'], [u'0x0dbd369a741319fa5107733e2c9db9929093e3c7']], u'0x00000000000000000000000000000000013241a2': [['0x196b6a16488467730756c895943bc43e1e0b0473', '0x532c1400cb002e380da563b918ee607a08a7f5bb', '0xc627b88e1bfe6603644600571e87c31e5c38803d', '0xa7013f3417eb7427dfb8bc2acd940017ac778407'], [u'0x4b5ae4567ad5d9fb92bc9afd6a657e6fa13a2523']], u'0x00000000000000000000000000000000013241a3': u'0xd3f1a71d1d8f073f4e725f57bbe14d67da22f888'}
Initializing chain from provided state
permission_interface.sol:9:5: Warning: No visibility specified. Defaulting to "public".
    function grantPermission(address _user, uint8 _permission) returns (bool);
    ^------------------------------------------------------------------------^
permission_interface.sol:11:5: Warning: No visibility specified. Defaulting to "public".
    function revokePermission(address _user, uint8 _permission) returns (bool);
    ^-------------------------------------------------------------------------^
permission_interface.sol:13:5: Warning: No visibility specified. Defaulting to "public".
    function queryUsersOfPermission(uint8 _permission) constant returns (string);
    ^---------------------------------------------------------------------------^
permission_interface.sol:15:5: Warning: No visibility specified. Defaulting to "public".
    function queryPermission(address _user) returns (uint8);
    ^------------------------------------------------------^
permission_manager.sol:25:5: Warning: No visibility specified. Defaulting to "public".
    function PermissionManager(address[] _senders, address[] _creators) {
    ^
Spanning multiple lines.
permission_manager.sol:39:5: Warning: No visibility specified. Defaulting to "public".
    function grantPermission(address _user, uint8 _permission) returns (bool) {
    ^
Spanning multiple lines.
permission_manager.sol:59:5: Warning: No visibility specified. Defaulting to "public".
    function revokePermission(address _user, uint8 _permission) returns (bool) {
    ^
Spanning multiple lines.
permission_manager.sol:77:5: Warning: No visibility specified. Defaulting to "public".
    function queryUsersOfPermission(uint8 _permission) constant returns (string) {
    ^
Spanning multiple lines.
permission_manager.sol:87:5: Warning: No visibility specified. Defaulting to "public".
    function queryPermission(address _user) returns (uint8) {
    ^
Spanning multiple lines.
strings.sol:160:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:250:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:299:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:646:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
strings.sol:646:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^
Spanning multiple lines.

strings.sol:692:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:300:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
strings.sol:474:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^---^
strings.sol:476:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^---^
strings.sol:511:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^---^
strings.sol:513:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^---^
strings.sol:515:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jump(exit)
                    ^--^
permission_manager.sol:79:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            return concatUser(senders);
                   ^-----------------^
permission_manager.sol:82:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            return concatUser(creators);
                   ^------------------^
permission_manager.sol:121:5: Warning: Function state mutability can be restricted to pure
    function indexUser(address _user, address[] _users) internal returns (uint) {
    ^
Spanning multiple lines.
permission_manager.sol:134:5: Warning: Function state mutability can be restricted to pure
    function toString(address x) internal returns (string) {
    ^
Spanning multiple lines.
strings.sol:44:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^
Spanning multiple lines.
strings.sol:68:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:81:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^
Spanning multiple lines.
strings.sol:130:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:156:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.
strings.sol:185:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:198:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^
Spanning multiple lines.
strings.sol:242:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:293:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^
Spanning multiple lines.
strings.sol:342:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^
Spanning multiple lines.
strings.sol:354:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:380:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:409:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:437:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^
Spanning multiple lines.
6060604052341561000f57600080fd5b604051610c52380380610c528339810160405280805182019190602001805190910190506000805b83518210156100f557600080546001810161005283826101bb565b9160005260206000209001600086858151811061006b57fe5b90602001906020020151909190916101000a815481600160a060020a030219169083600160a060020a03160217905550506001600260008685815181106100ae57fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff191660018360028111156100e557fe5b0217905550600190910190610037565b5060005b82518110156101b2576001805480820161011383826101bb565b9160005260206000209001600085848151811061012c57fe5b90602001906020020151909190916101000a815481600160a060020a030219169083600160a060020a0316021790555050600280600085848151811061016e57fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff191660018360028111156101a557fe5b02179055506001016100f9565b50505050610205565b8154818355818115116101df576000838152602090206101df9181019083016101e4565b505050565b61020291905b808211156101fe57600081556001016101ea565b5090565b90565b610a3e806102146000396000f300606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663301da870811461006857806354ad6352146100a15780636f4eaf7a146100d6578063c390355c14610166578063dd8a8a05146101a957600080fd5b341561007357600080fd5b61008d600160a060020a036004351660ff602435166101ce565b604051901515815260200160405180910390f35b34156100ac57600080fd5b6100c0600160a060020a036004351661036e565b60405160ff909116815260200160405180910390f35b34156100e157600080fd5b6100ef60ff6004351661039e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a0360043516610489565b6040518082600281111561019557fe5b60ff16815260200191505060405180910390f35b34156101b457600080fd5b61008d600160a060020a036004351660ff6024351661049e565b600160a060020a033316600090815260026020819052604082205460ff16908111156101f657fe5b60ff168260ff1611806102365750600160a060020a03831660009081526002602081905260409091205460ff169081111561022d57fe5b60ff168260ff16105b1561024357506000610368565b60ff8216600114156102af576000805460018101610261838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002905260409020805460ff191660011790555b60ff82166002141561031d57600180548082016102cc838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002908190526040909120805460ff191690911790555b7fca571b17c94502f9fcce67874fd8e4ac41a6139e5dd6f79836393bcc12a0e7658383604051600160a060020a03909216825260ff1660208201526040908101905180910390a15060015b92915050565b600160a060020a038116600090815260026020819052604082205460ff169081111561039657fe5b90505b919050565b6103a66109c8565b60ff82166001141561041c57610415600080548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103ed575b50505050506105d2565b9050610399565b60ff82166002141561039957610415600180548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116103ed5750505050506105d2565b60026020526000908152604090205460ff1681565b600160a060020a033316600090815260026020819052604082205460ff16908111156104c657fe5b60ff168260ff1611806105075750600160a060020a03831660009081526002602081905260409091205460ff16908111156104fd57fe5b60ff168260ff1614155b80610523575082600160a060020a031633600160a060020a0316145b1561053057506000610368565b600160a060020a0383166000908152600260205260409020805460ff1916905560ff82166001141561056957610567836000610653565b505b60ff82166002141561058257610580836001610653565b505b7f76a0b4b4ddd449a15dd0e157534f1220234491c2643c254ead34327e6f51952e8383604051600160a060020a03909216825260ff1660208201526040908101905180910390a150600192915050565b6105da6109c8565b6000808351111561060757610604836000815181106105f557fe5b906020019060200201516107aa565b91505b5060015b825181101561064d5761064361062e6106298584815181106105f557fe5b610877565b61063784610877565b9063ffffffff61089f16565b915060010161060b565b50919050565b60008060006106bb85858054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610693575b5050505050610907565b845490925082106106cf57600092506107a2565b50805b8354600019018110156107545783816001018154811015156106f057fe5b6000918252602090912001548454600160a060020a039091169085908390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016106d2565b83548490600019810190811061076657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055835461079c85600019830161099f565b50600192505b505092915050565b6107b26109c8565b6107ba6109c8565b600060146040518059106107cb5750595b90808252806020026020018201604052509150600090505b6014811015610870578060130360080260020a84600160a060020a031681151561080957fe5b047f01000000000000000000000000000000000000000000000000000000000000000282828151811061083857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107e3565b5092915050565b61087f6109da565b602082016040805190810160405280845181526020019190915292915050565b6108a76109c8565b6108af6109c8565b600083518551016040518059106108c35750595b908082528060200260200182016040525091506020820190506108ec818660200151875161095a565b6108ff855182018560200151865161095a565b509392505050565b6000805b82518110156109535782818151811061092057fe5b90602001906020020151600160a060020a031684600160a060020a0316141561094b57809150610870565b60010161090b565b9392505050565b60005b60208210610980578251845260208401935060208301925060208203915061095d565b6001826020036101000a03905080198351168185511617909352505050565b8154818355818115116109c3576000838152602090206109c39181019083016109f1565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b610a0f91905b80821115610a0b57600081556001016109f7565b5090565b905600a165627a7a72305820dc9dc86fa1ff557a0ae74b02c4963d68c4935924d3dbf19a4d920078ef0d120d00290000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001a702a25c6bca72b67987968f0bfb3a3213c568800000000000000000000000000000000000000000000000000000000000000010000000000000000000000000dbd369a741319fa5107733e2c9db9929093e3c7
INFO:eth.block	Block pre-sealed, 909852 gas used 
INFO:eth.chain	Adding to head head=c6745cf3cada515bbfb9573261c82547e0b8f9e3d5dd382e464704a84e47b5ad
INFO:eth.chain	Added block 1 (4b3e321a) with 1 txs and 909852 gas 
node_interface.sol:5:5: Warning: No visibility specified. Defaulting to "public".
    function newNode(address _node) returns (bool);
    ^---------------------------------------------^
node_interface.sol:7:5: Warning: No visibility specified. Defaulting to "public".
    function approveNode(address _node) returns (bool);
    ^-------------------------------------------------^
node_interface.sol:9:5: Warning: No visibility specified. Defaulting to "public".
    function deleteNode(address _node) returns (bool);
    ^------------------------------------------------^
node_interface.sol:12:5: Warning: No visibility specified. Defaulting to "public".
    function listNode() constant returns (string);
    ^--------------------------------------------^
node_interface.sol:17:5: Warning: No visibility specified. Defaulting to "public".
    function getStatus(address _node) constant returns (uint8);
    ^---------------------------------------------------------^
node_interface.sol:18:5: Warning: No visibility specified. Defaulting to "public".
    function addAdmin(address) returns (bool);
    ^----------------------------------------^
node_interface.sol:19:5: Warning: No visibility specified. Defaulting to "public".
    function isAdmin(address) constant returns (bool);
    ^------------------------------------------------^
node_manager.sol:46:5: Warning: No visibility specified. Defaulting to "public".
    function NodeManager(address[] _nodes, address[] _admins) {
    ^
Spanning multiple lines.
node_manager.sol:57:5: Warning: No visibility specified. Defaulting to "public".
    function addAdmin(address _node) onlyAdmin returns (bool) {
    ^
Spanning multiple lines.
node_manager.sol:64:5: Warning: No visibility specified. Defaulting to "public".
    function newNode(address _node) returns (bool) {
    ^
Spanning multiple lines.
node_manager.sol:79:5: Warning: No visibility specified. Defaulting to "public".
    function approveNode(address _node) onlyAdmin oneOperate returns (bool) {
    ^
Spanning multiple lines.
node_manager.sol:96:5: Warning: No visibility specified. Defaulting to "public".
    function deleteNode(address _node) onlyAdmin oneOperate returns (bool) {
    ^
Spanning multiple lines.
node_manager.sol:123:5: Warning: No visibility specified. Defaulting to "public".
    function listNode() constant returns (string) {
    ^
Spanning multiple lines.
node_manager.sol:128:5: Warning: No visibility specified. Defaulting to "public".
    function getStatus(address _node) constant returns (uint8) {
    ^
Spanning multiple lines.
node_manager.sol:132:5: Warning: No visibility specified. Defaulting to "public".
    function isAdmin(address _node) constant returns (bool) {
    ^
Spanning multiple lines.
strings.sol:160:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:250:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:299:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:646:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
strings.sol:646:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^
Spanning multiple lines.

strings.sol:692:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:300:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
strings.sol:474:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^---^
strings.sol:476:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^---^
strings.sol:511:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^---^
strings.sol:513:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^---^
strings.sol:515:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jump(exit)
                    ^--^
node_manager.sol:124:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return concatNodes(nodes);
               ^----------------^
node_manager.sol:148:5: Warning: Function state mutability can be restricted to view
    function nodeIndex(address _node) internal returns (uint) {
    ^
Spanning multiple lines.
node_manager.sol:161:5: Warning: Function state mutability can be restricted to pure
    function toString(address x) internal returns (string) {
    ^
Spanning multiple lines.
strings.sol:44:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^
Spanning multiple lines.
strings.sol:68:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:81:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^
Spanning multiple lines.
strings.sol:130:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:156:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.
strings.sol:185:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:198:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^
Spanning multiple lines.
strings.sol:242:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:293:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^
Spanning multiple lines.
strings.sol:342:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^
Spanning multiple lines.
strings.sol:354:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:380:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:409:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:437:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^
Spanning multiple lines.
6060604052341561000f57600080fd5b604051610c48380380610c488339810160405280805182019190602001805190910190506000805b83518210156100f657600260008086858151811061005157fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff1916600183600281111561008857fe5b0217905550600380546001810161009f8382610157565b916000526020600020900160008685815181106100b857fe5b90602001906020020151909190916101000a815481600160a060020a030219169083600160a060020a03160217905550508180600101925050610037565b5060005b825181101561014e57600180600085848151811061011457fe5b90602001906020020151600160a060020a031681526020810191909152604001600020805460ff19169115159190911790556001016100fa565b505050506101a1565b81548183558181151161017b5760008381526020902061017b918101908301610180565b505050565b61019e91905b8082111561019a5760008155600101610186565b5090565b90565b610a98806101b06000396000f3006060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100905780632d4ede93146100c357806330ccebb5146100e2578063609df32f14610117578063645b8b1b146101a157806370480275146101e4578063dd4c97a014610203578063ddad2ffe14610222575b600080fd5b341561009b57600080fd5b6100af600160a060020a0360043516610241565b604051901515815260200160405180910390f35b34156100ce57600080fd5b6100af600160a060020a0360043516610263565b34156100ed57600080fd5b610101600160a060020a036004351661044a565b60405160ff909116815260200160405180910390f35b341561012257600080fd5b61012a610477565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016657808201518382015260200161014e565b50505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57600080fd5b6101c0600160a060020a03600435166104e8565b604051808260028111156101d057fe5b60ff16815260200191505060405180910390f35b34156101ef57600080fd5b6100af600160a060020a03600435166104fd565b341561020e57600080fd5b6100af600160a060020a036004351661057f565b341561022d57600080fd5b6100af600160a060020a03600435166106b6565b600160a060020a03811660009081526001602052604090205460ff165b919050565b600160a060020a0333166000908152600160205260408120548190819060ff161561008b574360009081526002602052604090205460ff16151561008b576002600160a060020a03851660009081526020819052604090205460ff1660028111156102ca57fe5b146102d85760009250610443565b6102e18461078a565b60035490925082106102f65760009250610443565b50600160a060020a0383166000908152602081905260409020805460ff19169055805b6003546000190181101561039c57600380546001830190811061033857fe5b60009182526020909120015460038054600160a060020a03909216918390811061035e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610319565b6003805460001981019081106103ae57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905560038054906103e79060001983016109fc565b504360009081526002602052604090819020805460ff191690557f74976f07ac4bfb6a02b2dbd3bc158d4984ee6027d938e870692126ca9e1931d590859051600160a060020a03909116815260200160405180910390a1600192505b5050919050565b600160a060020a03811660009081526020819052604081205460ff16600281111561047157fe5b92915050565b61047f610a25565b6104e260038054806020026020016040519081016040528092919081815260200182805480156104d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ba575b50505050506107df565b90505b90565b60006020819052908152604090205460ff1681565b600160a060020a03331660009081526001602052604081205460ff161561008b57600160a060020a03808316600081815260016020819052604091829020805460ff1916909117905533909216917f99ad91c72e4fcc0a37d0481b982aec5c0c78491d30d39e65338bec15fa9cc4b7905160405180910390a35060015b61025e565b600160a060020a03331660009081526001602052604081205460ff161561008b574360009081526002602052604090205460ff16151561008b576001600160a060020a03831660009081526020819052604090205460ff1660028111156105e257fe5b146105ef575060006106b1565b600160a060020a0382166000908152602081815260408083208054600260ff199182168117909255438552925290912080549091166001908117909155600380549091810161063e83826109fc565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f5d55f24dd047ef52a5f36ddefc8c424e4b26c8415d8758be1bbb88b5c65e04eb82604051600160a060020a03909116815260200160405180910390a15060015b61057a565b60006001600160a060020a03831660009081526020819052604090205460ff1660028111156106e157fe5b148061071357506002600160a060020a03831660009081526020819052604090205460ff16600281111561071157fe5b145b156107205750600061025e565b600160a060020a03821660009081526020819052604090819020805460ff191660011790557ffd96b5bdd2e0412ade018159455c7af2bed1366ab61906962a1b5638f29c68c190839051600160a060020a03909116815260200160405180910390a1506001919050565b6000805b6003548110156107d55760038054829081106107a657fe5b600091825260209091200154600160a060020a03848116911614156107cd578091506107d9565b60010161078e565b8091505b50919050565b6107e7610a25565b60008083511115610814576108118360008151811061080257fe5b9060200190602002015161085a565b91505b5060015b82518110156107d95761085061083b61083685848151811061080257fe5b610927565b61084484610927565b9063ffffffff61094f16565b9150600101610818565b610862610a25565b61086a610a25565b6000601460405180591061087b5750595b90808252806020026020018201604052509150600090505b6014811015610920578060130360080260020a84600160a060020a03168115156108b957fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106108e857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610893565b5092915050565b61092f610a37565b602082016040805190810160405280845181526020019190915292915050565b610957610a25565b61095f610a25565b600083518551016040518059106109735750595b9080825280602002602001820160405250915060208201905061099c81866020015187516109b7565b6109af85518201856020015186516109b7565b509392505050565b60005b602082106109dd57825184526020840193506020830192506020820391506109ba565b6001826020036101000a03905080198351168185511617909352505050565b815481835581811511610a2057600083815260209020610a20918101908301610a4e565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b6104e591905b80821115610a685760008155600101610a54565b50905600a165627a7a7230582051c9a7e853bbdee43a2a15e229e58b1470ad267263a5eab4aac5d646c2031ddb0029000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000196b6a16488467730756c895943bc43e1e0b0473000000000000000000000000532c1400cb002e380da563b918ee607a08a7f5bb000000000000000000000000c627b88e1bfe6603644600571e87c31e5c38803d000000000000000000000000a7013f3417eb7427dfb8bc2acd940017ac77840700000000000000000000000000000000000000000000000000000000000000010000000000000000000000004b5ae4567ad5d9fb92bc9afd6a657e6fa13a2523
INFO:eth.block	Block pre-sealed, 1029635 gas used 
INFO:eth.chain	Adding to head head=4b3e321adbd172cc3e2d193fef2045ad9c32c27dbfb74874966c5a547f942d49
INFO:eth.chain	Added block 2 (7f460e31) with 1 txs and 1029635 gas 
quota.sol:42:5: Warning: No visibility specified. Defaulting to "public".
    function addAdmin(address) onlyAdmin returns (bool) { }
    ^-----------------------------------------------------^
quota.sol:43:5: Warning: No visibility specified. Defaulting to "public".
    function isAdmin(address) constant returns (bool) { }
    ^---------------------------------------------------^
quota.sol:44:5: Warning: No visibility specified. Defaulting to "public".
    function setIsGlobal(bytes32, bool) onlyAdmin returns (bool) { }
    ^--------------------------------------------------------------^
quota.sol:45:5: Warning: No visibility specified. Defaulting to "public".
    function setGlobal(bytes32, bytes32) onlyAdmin returns (bool) { }
    ^---------------------------------------------------------------^
quota.sol:46:5: Warning: No visibility specified. Defaulting to "public".
    function setSpecial(address, bytes32, bytes32) onlyAdmin returns (bool) { }
    ^-------------------------------------------------------------------------^
quota.sol:47:5: Warning: No visibility specified. Defaulting to "public".
    function setBlockGasLimit(uint _value) onlyAdmin checkLimit(_value) checkBlockLimit(_value) returns (bool) { }
    ^------------------------------------------------------------------------------------------------------------^
quota.sol:48:5: Warning: No visibility specified. Defaulting to "public".
    function setGlobalAccountGasLimit(uint _value) onlyAdmin checkLimit(_value) returns (bool) { }
    ^--------------------------------------------------------------------------------------------^
quota.sol:49:5: Warning: No visibility specified. Defaulting to "public".
    function setAccountGasLimit(address, uint _value) onlyAdmin checkLimit(_value) returns (bool) { }
    ^-----------------------------------------------------------------------------------------------^
quota.sol:50:5: Warning: No visibility specified. Defaulting to "public".
    function getData(bytes32) constant returns (bytes32) { }
    ^------------------------------------------------------^
quota.sol:51:5: Warning: No visibility specified. Defaulting to "public".
    function getSpecialUsers() constant returns (string) { }
    ^------------------------------------------------------^
quota.sol:52:5: Warning: No visibility specified. Defaulting to "public".
    function getUsersQuota() constant returns (string) { }
    ^----------------------------------------------------^
quota.sol:53:5: Warning: No visibility specified. Defaulting to "public".
    function getblockGasLimit() constant returns (bytes32) { }
    ^--------------------------------------------------------^
quota.sol:54:5: Warning: No visibility specified. Defaulting to "public".
    function getAccountGasLimit() constant returns (bytes32) { }
    ^----------------------------------------------------------^
quota.sol:55:5: Warning: No visibility specified. Defaulting to "public".
    function getAccountQuota(address _user) constant returns (bytes32) { }
    ^--------------------------------------------------------------------^
quota.sol:65:5: Warning: No visibility specified. Defaulting to "public".
    function Quota(address _account) {
    ^
Spanning multiple lines.
quota.sol:75:5: Warning: No visibility specified. Defaulting to "public".
    function addAdmin(address _account) onlyAdmin returns (bool) {
    ^
Spanning multiple lines.
quota.sol:81:5: Warning: No visibility specified. Defaulting to "public".
    function isAdmin(address _account) constant returns (bool) {
    ^
Spanning multiple lines.
quota.sol:85:5: Warning: No visibility specified. Defaulting to "public".
    function setIsGlobal(bytes32 key, bool value) onlyAdmin returns (bool) {
    ^
Spanning multiple lines.
quota.sol:91:5: Warning: No visibility specified. Defaulting to "public".
    function setGlobal(bytes32 key, bytes32 value) onlyAdmin returns (bool) {
    ^
Spanning multiple lines.
quota.sol:97:5: Warning: No visibility specified. Defaulting to "public".
    function setSpecial(address _account, bytes32 key, bytes32 value) onlyAdmin returns (bool) {
    ^
Spanning multiple lines.
quota.sol:108:5: Warning: No visibility specified. Defaulting to "public".
    function setBlockGasLimit(uint _value)
    ^
Spanning multiple lines.
quota.sol:117:5: Warning: No visibility specified. Defaulting to "public".
    function setGlobalAccountGasLimit(uint _value)
    ^
Spanning multiple lines.
quota.sol:126:5: Warning: No visibility specified. Defaulting to "public".
    function setAccountGasLimit(address _account, uint _value)
    ^
Spanning multiple lines.
quota.sol:143:5: Warning: No visibility specified. Defaulting to "public".
    function getData(bytes32 key) constant returns (bytes32) {
    ^
Spanning multiple lines.
quota.sol:151:5: Warning: No visibility specified. Defaulting to "public".
    function getSpecialUsers() constant returns (string) {
    ^
Spanning multiple lines.
quota.sol:155:5: Warning: No visibility specified. Defaulting to "public".
    function getUsersQuota() constant returns (string) {
    ^
Spanning multiple lines.
quota.sol:159:5: Warning: No visibility specified. Defaulting to "public".
    function getblockGasLimit() constant returns (bytes32) {
    ^
Spanning multiple lines.
quota.sol:163:5: Warning: No visibility specified. Defaulting to "public".
    function getAccountGasLimit() constant returns (bytes32) {
    ^
Spanning multiple lines.
quota.sol:167:5: Warning: No visibility specified. Defaulting to "public".
    function getAccountQuota(address _user) constant returns (bytes32) {
    ^
Spanning multiple lines.
strings.sol:160:14: Warning: This declaration shadows an existing declaration.
        for (uint len = 0; ptr < end; len++) {
             ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:250:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:299:9: Warning: This declaration shadows an existing declaration.
        uint len;
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:646:64: Warning: This declaration shadows an existing declaration.
    function count(slice self, slice needle) internal returns (uint count) {
                                                               ^--------^
strings.sol:646:5: The shadowed declaration is here:
    function count(slice self, slice needle) internal returns (uint count) {
    ^
Spanning multiple lines.

strings.sol:692:9: Warning: This declaration shadows an existing declaration.
        uint len = self._len * (parts.length - 1);
        ^------^
strings.sol:156:5: The shadowed declaration is here:
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.

strings.sol:300:9: Warning: Variable is shadowed in inline assembly by an instruction of the same name
        uint div = 2 ** 248;
        ^------^
strings.sol:474:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(exit, eq(and(mload(ptr), mask), needledata))
                    ^---^
strings.sol:476:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(loop, lt(sub(ptr, 1), end))
                    ^---^
strings.sol:511:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(ret, eq(and(mload(ptr), mask), needledata))
                    ^---^
strings.sol:513:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jumpi(loop, gt(add(ptr, 1), selfptr))
                    ^---^
strings.sol:515:21: Warning: Jump instructions are low-level EVM features that can lead to incorrect stack access. Because of that they are discouraged. Please consider using "switch" or "for" statements instead.
                    jump(exit)
                    ^--^
quota.sol:55:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getAccountQuota(address _user) constant returns (bytes32) { }
                             ^-----------^
quota.sol:42:5: Warning: Function state mutability can be restricted to view
    function addAdmin(address) onlyAdmin returns (bool) { }
    ^-----------------------------------------------------^
quota.sol:43:5: Warning: Function state mutability can be restricted to pure
    function isAdmin(address) constant returns (bool) { }
    ^---------------------------------------------------^
quota.sol:44:5: Warning: Function state mutability can be restricted to view
    function setIsGlobal(bytes32, bool) onlyAdmin returns (bool) { }
    ^--------------------------------------------------------------^
quota.sol:45:5: Warning: Function state mutability can be restricted to view
    function setGlobal(bytes32, bytes32) onlyAdmin returns (bool) { }
    ^---------------------------------------------------------------^
quota.sol:46:5: Warning: Function state mutability can be restricted to view
    function setSpecial(address, bytes32, bytes32) onlyAdmin returns (bool) { }
    ^-------------------------------------------------------------------------^
quota.sol:47:5: Warning: Function state mutability can be restricted to view
    function setBlockGasLimit(uint _value) onlyAdmin checkLimit(_value) checkBlockLimit(_value) returns (bool) { }
    ^------------------------------------------------------------------------------------------------------------^
quota.sol:48:5: Warning: Function state mutability can be restricted to view
    function setGlobalAccountGasLimit(uint _value) onlyAdmin checkLimit(_value) returns (bool) { }
    ^--------------------------------------------------------------------------------------------^
quota.sol:49:5: Warning: Function state mutability can be restricted to view
    function setAccountGasLimit(address, uint _value) onlyAdmin checkLimit(_value) returns (bool) { }
    ^-----------------------------------------------------------------------------------------------^
quota.sol:50:5: Warning: Function state mutability can be restricted to pure
    function getData(bytes32) constant returns (bytes32) { }
    ^------------------------------------------------------^
quota.sol:51:5: Warning: Function state mutability can be restricted to pure
    function getSpecialUsers() constant returns (string) { }
    ^------------------------------------------------------^
quota.sol:52:5: Warning: Function state mutability can be restricted to pure
    function getUsersQuota() constant returns (string) { }
    ^----------------------------------------------------^
quota.sol:53:5: Warning: Function state mutability can be restricted to pure
    function getblockGasLimit() constant returns (bytes32) { }
    ^--------------------------------------------------------^
quota.sol:54:5: Warning: Function state mutability can be restricted to pure
    function getAccountGasLimit() constant returns (bytes32) { }
    ^----------------------------------------------------------^
quota.sol:55:5: Warning: Function state mutability can be restricted to pure
    function getAccountQuota(address _user) constant returns (bytes32) { }
    ^--------------------------------------------------------------------^
quota.sol:147:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            return _getData(key);
                   ^-----------^
quota.sol:152:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return concatUser(special_users);
               ^-----------------------^
quota.sol:156:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return concatBytes(users_quota);
               ^----------------------^
quota.sol:197:5: Warning: Function state mutability can be restricted to view
    function _getData(bytes32 key) internal returns (bytes32) {
    ^
Spanning multiple lines.
quota.sol:208:5: Warning: Function state mutability can be restricted to pure
    function toString(address x) internal returns (string) {
    ^
Spanning multiple lines.
quota.sol:218:5: Warning: Function state mutability can be restricted to pure
    function bytes32ToString(bytes32 x) constant internal returns (string) {
    ^
Spanning multiple lines.
strings.sol:44:5: Warning: Function state mutability can be restricted to pure
    function memcpy(uint dest, uint src, uint len) private {
    ^
Spanning multiple lines.
strings.sol:68:5: Warning: Function state mutability can be restricted to pure
    function toSlice(string self) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:81:5: Warning: Function state mutability can be restricted to pure
    function len(bytes32 self) internal returns (uint) {
    ^
Spanning multiple lines.
strings.sol:130:5: Warning: Function state mutability can be restricted to pure
    function copy(slice self) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:156:5: Warning: Function state mutability can be restricted to pure
    function len(slice self) internal returns (uint) {
    ^
Spanning multiple lines.
strings.sol:185:5: Warning: Function state mutability can be restricted to pure
    function empty(slice self) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:198:5: Warning: Function state mutability can be restricted to pure
    function compare(slice self, slice other) internal returns (int) {
    ^
Spanning multiple lines.
strings.sol:242:5: Warning: Function state mutability can be restricted to pure
    function nextRune(slice self, slice rune) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:293:5: Warning: Function state mutability can be restricted to pure
    function ord(slice self) internal returns (uint ret) {
    ^
Spanning multiple lines.
strings.sol:342:5: Warning: Function state mutability can be restricted to pure
    function keccak(slice self) internal returns (bytes32 ret) {
    ^
Spanning multiple lines.
strings.sol:354:5: Warning: Function state mutability can be restricted to pure
    function startsWith(slice self, slice needle) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:380:5: Warning: Function state mutability can be restricted to pure
    function beyond(slice self, slice needle) internal returns (slice) {
    ^
Spanning multiple lines.
strings.sol:409:5: Warning: Function state mutability can be restricted to pure
    function endsWith(slice self, slice needle) internal returns (bool) {
    ^
Spanning multiple lines.
strings.sol:437:5: Warning: Function state mutability can be restricted to pure
    function until(slice self, slice needle) internal returns (slice) {
    ^
Spanning multiple lines.

INFO:eth.block	Block pre-sealed, 1271871 gas used 
INFO:eth.chain	Adding to head head=7f460e31c58fcadfaa998b7e3938801b3ae41b7677e9b8c6c4857e4cb5ac5ddd
INFO:eth.chain	Added block 3 (0ae7bba0) with 1 txs and 1271871 gas 
Start creating Node  0  Configuration!
End creating Node  0 Configuration!
Start creating Node  1  Configuration!
End creating Node  1 Configuration!
Start creating Node  2  Configuration!
End creating Node  2 Configuration!
Start creating Node  3  Configuration!
End creating Node  3 Configuration!
Step 3: ********************************************************
JsonRpc Configuration creating!
Step 4: ********************************************************
Start generating JsonRpc Configuration Node 0 !
[JsonRpc Configuration Path] :  /data/node0
JsonRpc Configuration for Node 0 !
########################################################
Start generating JsonRpc Configuration Node 1 !
[JsonRpc Configuration Path] :  /data/node1
JsonRpc Configuration for Node 1 !
########################################################
Start generating JsonRpc Configuration Node 2 !
[JsonRpc Configuration Path] :  /data/node2
JsonRpc Configuration for Node 2 !
########################################################
Start generating JsonRpc Configuration Node 3 !
[JsonRpc Configuration Path] :  /data/node3
JsonRpc Configuration for Node 3 !
########################################################
********************************************************
WARN: remember then delete all privkey files!!!

##启动4个节点

docker-compose up node0 node1 node2 node3

第一次出现了 error，扫除了痕迹之后，顺利进行，4个节点启动了，每个块等待时间为3秒左右，由于网络环境稍有延迟，唯一的问题还是日志内容太多，总的来说，nice：

cpt@cryptape-server:~/cita$ docker-compose up node0 node1 node2 node3
Creating node0 ... 
Creating node3 ... 
Creating node2 ... 
Creating node1 ... 
Creating node0
Creating node3
Creating node1
Creating node1 ... done
Attaching to node0, node3, node2, node1
node3    | 20171025 03:06:32 - INFO - CITA:chain
node0    | 20171025 03:06:32 - INFO - CITA:chain
node3    | 20171025 03:06:32 - INFO - Session initialized
node2    | 20171025 03:06:32 - INFO - CITA:chain
node0    | 20171025 03:06:33 - INFO - Session initialized
node2    | 20171025 03:06:33 - INFO - Session initialized
node1    | 20171025 03:06:33 - INFO - CITA:chain
node1    | 20171025 03:06:33 - INFO - Session initialized
node3    | 20171025 03:06:33 - INFO - Session initialized
node0    | 20171025 03:06:34 - INFO - Session initialized
node2    | 20171025 03:06:34 - INFO - Session initialized
node1    | 20171025 03:06:35 - INFO - Session initialized
node3    | 20171025 03:06:37 - WARN - not expected get_chain.
node3    | 20171025 03:06:37 - INFO - **** begin **** 
node3    | 
node3    | 20171025 03:06:37 - INFO - chain first init, to do init contracts on height eq zero
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d", result = Ok(000000000000000000000000c627b88e1bfe6603644600571e87c31e5c38803d)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b", result = Ok(000000000000000000000000196b6a16488467730756c895943bc43e1e0b0473)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x03", result = Ok(0000000000000000000000000000000000000000000000000000000000000004)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e", result = Ok(000000000000000000000000a7013f3417eb7427dfb8bc2acd940017ac778407)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c", result = Ok(000000000000000000000000532c1400cb002e380da563b918ee607a08a7f5bb)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563", result = Ok(0000000000000000000000001a702a25c6bca72b67987968f0bfb3a3213c5688)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x00", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6", result = Ok(0000000000000000000000000dbd369a741319fa5107733e2c9db9929093e3c7)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x01", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x04", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b", result = Ok(000000000000000000000000d3f1a71d1d8f073f4e725f57bbe14d67da22f888)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x05", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd", result = Ok(00000000000000000000000000000000000000000000000000000000017fa158)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node3    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node3    | 20171025 03:06:37 - INFO - **** end **** 
node3    | 
node3    | 20171025 03:06:37 - INFO - init genesis Genesis { spec: Spec { alloc: {"0x00000000000000000000000000000000013241a2": Contract { nonce: "1", code: "0x6060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100905780632d4ede93146100c357806330ccebb5146100e2578063609df32f14610117578063645b8b1b146101a157806370480275146101e4578063dd4c97a014610203578063ddad2ffe14610222575b600080fd5b341561009b57600080fd5b6100af600160a060020a0360043516610241565b604051901515815260200160405180910390f35b34156100ce57600080fd5b6100af600160a060020a0360043516610263565b34156100ed57600080fd5b610101600160a060020a036004351661044a565b60405160ff909116815260200160405180910390f35b341561012257600080fd5b61012a610477565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016657808201518382015260200161014e565b50505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57600080fd5b6101c0600160a060020a03600435166104e8565b604051808260028111156101d057fe5b60ff16815260200191505060405180910390f35b34156101ef57600080fd5b6100af600160a060020a03600435166104fd565b341561020e57600080fd5b6100af600160a060020a036004351661057f565b341561022d57600080fd5b6100af600160a060020a03600435166106b6565b600160a060020a03811660009081526001602052604090205460ff165b919050565b600160a060020a0333166000908152600160205260408120548190819060ff161561008b574360009081526002602052604090205460ff16151561008b576002600160a060020a03851660009081526020819052604090205460ff1660028111156102ca57fe5b146102d85760009250610443565b6102e18461078a565b60035490925082106102f65760009250610443565b50600160a060020a0383166000908152602081905260409020805460ff19169055805b6003546000190181101561039c57600380546001830190811061033857fe5b60009182526020909120015460038054600160a060020a03909216918390811061035e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610319565b6003805460001981019081106103ae57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905560038054906103e79060001983016109fc565b504360009081526002602052604090819020805460ff191690557f74976f07ac4bfb6a02b2dbd3bc158d4984ee6027d938e870692126ca9e1931d590859051600160a060020a03909116815260200160405180910390a1600192505b5050919050565b600160a060020a03811660009081526020819052604081205460ff16600281111561047157fe5b92915050565b61047f610a25565b6104e260038054806020026020016040519081016040528092919081815260200182805480156104d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ba575b50505050506107df565b90505b90565b60006020819052908152604090205460ff1681565b600160a060020a03331660009081526001602052604081205460ff161561008b57600160a060020a03808316600081815260016020819052604091829020805460ff1916909117905533909216917f99ad91c72e4fcc0a37d0481b982aec5c0c78491d30d39e65338bec15fa9cc4b7905160405180910390a35060015b61025e565b600160a060020a03331660009081526001602052604081205460ff161561008b574360009081526002602052604090205460ff16151561008b576001600160a060020a03831660009081526020819052604090205460ff1660028111156105e257fe5b146105ef575060006106b1565b600160a060020a0382166000908152602081815260408083208054600260ff199182168117909255438552925290912080549091166001908117909155600380549091810161063e83826109fc565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f5d55f24dd047ef52a5f36ddefc8c424e4b26c8415d8758be1bbb88b5c65e04eb82604051600160a060020a03909116815260200160405180910390a15060015b61057a565b60006001600160a060020a03831660009081526020819052604090205460ff1660028111156106e157fe5b148061071357506002600160a060020a03831660009081526020819052604090205460ff16600281111561071157fe5b145b156107205750600061025e565b600160a060020a03821660009081526020819052604090819020805460ff191660011790557ffd96b5bdd2e0412ade018159455c7af2bed1366ab61906962a1b5638f29c68c190839051600160a060020a03909116815260200160405180910390a1506001919050565b6000805b6003548110156107d55760038054829081106107a657fe5b600091825260209091200154600160a060020a03848116911614156107cd578091506107d9565b60010161078e565b8091505b50919050565b6107e7610a25565b60008083511115610814576108118360008151811061080257fe5b9060200190602002015161085a565b91505b5060015b82518110156107d95761085061083b61083685848151811061080257fe5b610927565b61084484610927565b9063ffffffff61094f16565b9150600101610818565b610862610a25565b61086a610a25565b6000601460405180591061087b5750595b90808252806020026020018201604052509150600090505b6014811015610920578060130360080260020a84600160a060020a03168115156108b957fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106108e857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610893565b5092915050565b61092f610a37565b602082016040805190810160405280845181526020019190915292915050565b610957610a25565b61095f610a25565b600083518551016040518059106109735750595b9080825280602002602001820160405250915060208201905061099c81866020015187516109b7565b6109af85518201856020015186516109b7565b509392505050565b60005b602082106109dd57825184526020840193506020830192506020820391506109ba565b6001826020036101000a03905080198351168185511617909352505050565b815481835581811511610a2057600083815260209020610a20918101908301610a4e565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b6104e591905b80821115610a685760008155600101610a54565b50905600a165627a7a7230582051c9a7e853bbdee43a2a15e229e58b1470ad267263a5eab4aac5d646c2031ddb0029", storage: {"0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d": "0xc627b88e1bfe6603644600571e87c31e5c38803d", "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c": "0x02", "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc": "0x02", "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e": "0x01", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b": "0x196b6a16488467730756c895943bc43e1e0b0473", "0x03": "0x04", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e": "0xa7013f3417eb7427dfb8bc2acd940017ac778407", "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83": "0x02", "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5": "0x02", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c": "0x532c1400cb002e380da563b918ee607a08a7f5bb"} }, "0x00000000000000000000000000000000013241a4": Contract { nonce: "1", code: "0x606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663301da870811461006857806354ad6352146100a15780636f4eaf7a146100d6578063c390355c14610166578063dd8a8a05146101a957600080fd5b341561007357600080fd5b61008d600160a060020a036004351660ff602435166101ce565b604051901515815260200160405180910390f35b34156100ac57600080fd5b6100c0600160a060020a036004351661036e565b60405160ff909116815260200160405180910390f35b34156100e157600080fd5b6100ef60ff6004351661039e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a0360043516610489565b6040518082600281111561019557fe5b60ff16815260200191505060405180910390f35b34156101b457600080fd5b61008d600160a060020a036004351660ff6024351661049e565b600160a060020a033316600090815260026020819052604082205460ff16908111156101f657fe5b60ff168260ff1611806102365750600160a060020a03831660009081526002602081905260409091205460ff169081111561022d57fe5b60ff168260ff16105b1561024357506000610368565b60ff8216600114156102af576000805460018101610261838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002905260409020805460ff191660011790555b60ff82166002141561031d57600180548082016102cc838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002908190526040909120805460ff191690911790555b7fca571b17c94502f9fcce67874fd8e4ac41a6139e5dd6f79836393bcc12a0e7658383604051600160a060020a03909216825260ff1660208201526040908101905180910390a15060015b92915050565b600160a060020a038116600090815260026020819052604082205460ff169081111561039657fe5b90505b919050565b6103a66109c8565b60ff82166001141561041c57610415600080548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103ed575b50505050506105d2565b9050610399565b60ff82166002141561039957610415600180548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116103ed5750505050506105d2565b60026020526000908152604090205460ff1681565b600160a060020a033316600090815260026020819052604082205460ff16908111156104c657fe5b60ff168260ff1611806105075750600160a060020a03831660009081526002602081905260409091205460ff16908111156104fd57fe5b60ff168260ff1614155b80610523575082600160a060020a031633600160a060020a0316145b1561053057506000610368565b600160a060020a0383166000908152600260205260409020805460ff1916905560ff82166001141561056957610567836000610653565b505b60ff82166002141561058257610580836001610653565b505b7f76a0b4b4ddd449a15dd0e157534f1220234491c2643c254ead34327e6f51952e8383604051600160a060020a03909216825260ff1660208201526040908101905180910390a150600192915050565b6105da6109c8565b6000808351111561060757610604836000815181106105f557fe5b906020019060200201516107aa565b91505b5060015b825181101561064d5761064361062e6106298584815181106105f557fe5b610877565b61063784610877565b9063ffffffff61089f16565b915060010161060b565b50919050565b60008060006106bb85858054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610693575b5050505050610907565b845490925082106106cf57600092506107a2565b50805b8354600019018110156107545783816001018154811015156106f057fe5b6000918252602090912001548454600160a060020a039091169085908390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016106d2565b83548490600019810190811061076657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055835461079c85600019830161099f565b50600192505b505092915050565b6107b26109c8565b6107ba6109c8565b600060146040518059106107cb5750595b90808252806020026020018201604052509150600090505b6014811015610870578060130360080260020a84600160a060020a031681151561080957fe5b047f01000000000000000000000000000000000000000000000000000000000000000282828151811061083857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107e3565b5092915050565b61087f6109da565b602082016040805190810160405280845181526020019190915292915050565b6108a76109c8565b6108af6109c8565b600083518551016040518059106108c35750595b908082528060200260200182016040525091506020820190506108ec818660200151875161095a565b6108ff855182018560200151865161095a565b509392505050565b6000805b82518110156109535782818151811061092057fe5b90602001906020020151600160a060020a031684600160a060020a0316141561094b57809150610870565b60010161090b565b9392505050565b60005b60208210610980578251845260208401935060208301925060208203915061095d565b6001826020036101000a03905080198351168185511617909352505050565b8154818355818115116109c3576000838152602090206109c39181019083016109f1565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b610a0f91905b80821115610a0b57600081556001016109f7565b5090565b905600a165627a7a72305820dc9dc86fa1ff557a0ae74b02c4963d68c4935924d3dbf19a4d920078ef0d120d0029", storage: {"0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039": "0x01", "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563": "0x1a702a25c6bca72b67987968f0bfb3a3213c5688", "0x00": "0x01", "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37": "0x02", "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6": "0x0dbd369a741319fa5107733e2c9db9929093e3c7", "0x01": "0x01"} }, "0x00000000000000000000000000000000013241a3": Contract { nonce: "1", code: "0x606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100d25780633a5b5cf31461010557806350f2ee971461012a57806354f6127f1461014f5780636cf729481461016557806370480275146101ef578063748ba8dd1461020e578063776dd3b6146102295780637a490f7e14610248578063a69257f31461025b578063c9bcec7714610271578063dae99b3a14610287578063dfa874251461029a578063eb93eddf146102bc575b600080fd5b34156100dd57600080fd5b6100f1600160a060020a03600435166102d5565b604051901515815260200160405180910390f35b341561011057600080fd5b6101186102f7565b60405190815260200160405180910390f35b341561013557600080fd5b6100f1600160a060020a0360043516602435604435610346565b341561015a57600080fd5b6101186004356103d5565b341561017057600080fd5b610178610411565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b457808201518382015260200161019c565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fa57600080fd5b6100f1600160a060020a0360043516610481565b341561021957600080fd5b6100f16004356024351515610500565b341561023457600080fd5b610118600160a060020a0360043516610582565b341561025357600080fd5b61017861062e565b341561026657600080fd5b6100f1600435610690565b341561027c57600080fd5b6100f1600435610771565b341561029257600080fd5b61011861083e565b34156102a557600080fd5b6100f1600160a060020a036004351660243561087a565b34156102c757600080fd5b6100f16004356024356109b6565b600160a060020a03811660009081526020819052604090205460ff165b919050565b7f626c6f636b4761734c696d69740000000000000000000000000000000000000060005260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7545b90565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380851660008181526003602090815260408083208884529091529081902085905533909216918591907f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578799086905190815260200160405180910390a45060019392505050565b60008181526001602052604081205460ff161561040157506000818152600260205260409020546102f2565b61040a82610a2c565b90506102f2565b610419610e22565b61047c600480548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610454575b5050505050610a98565b905090565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380831660008181526020819052604090819020805460ff1916600117905533909216917f224c2f3a0794342c616e2e1c9fdfac78b745825dd090fb47bd157a9287b24efc905160405180910390a35060016102f2565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526001602052604090819020805460ff191684151590811790915533600160a060020a03169185907f05b4a832711fc3318602fc0b4685ea4629b1bae830a0bdab94856389173a7217905160405180910390a45060015b92915050565b600160a060020a0381166000908152600360209081526040808320600080516020610e93833981519152845290915281205415156105f95750600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd546102f2565b50600160a060020a03166000908152600360209081526040808320600080516020610e93833981519152845290915290205490565b610636610e22565b61047c600580548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b81548152600190910190602001808311610671575b5050505050610b13565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806106ce57508083105b156106d857600080fd5b7f626c6f636b4761734c696d697400000000000000000000000000000000000000600081905260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a4600194505050505b50919050565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806107af57508083105b156107b957600080fd5b600080516020610e93833981519152600081905260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a46001945050505061076b565b600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd5490565b600160a060020a0333166000908152602081905260408120548190819060ff16156100cd5783677fffffffffffffff623fffff818311806108ba57508083105b156108c457600080fd5b600160a060020a0388166000908152600360209081526040808320600080516020610e9383398151915280855292529091208890556004805491965088955090600181016109128382610e34565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a1617905560058054600181016109568382610e34565b506000918252602090912001849055600160a060020a033381169086908a167f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578798760405190815260200160405180910390a4506001979650505050505050565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526002602052604090819020839055600160a060020a03331690839085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db905160405180910390a450600161057c565b600160a060020a0333166000908152600360209081526040808320848452909152812054819015610a8257600160a060020a0333166000908152600360209081526040808320868452909152902054915061076b565b600083815260026020526040902054915061076b565b610aa0610e22565b60008083511115610acd57610aca83600081518110610abb57fe5b90602001906020020151610b74565b91505b5060015b825181101561076b57610b09610af4610aef858481518110610abb57fe5b610c0d565b610afd84610c0d565b9063ffffffff610c3516565b9150600101610ad1565b610b1b610e22565b60008083511115610b4857610b4583600081518110610b3657fe5b90602001906020020151610c9d565b91505b5060015b825181101561076b57610b6a610af4610aef858481518110610b3657fe5b9150600101610b4c565b610b7c610e22565b610b84610e22565b60006014604051805910610b955750595b90808252806020026020018201604052509150600090505b6014811015610c06578060130360080260020a84600160a060020a0316811515610bd357fe5b0460f860020a02828281518110610be657fe5b906020010190600160f860020a031916908160001a905350600101610bad565b5092915050565b610c15610e5d565b602082016040805190810160405280845181526020019190915292915050565b610c3d610e22565b610c45610e22565b60008351855101604051805910610c595750595b90808252806020026020018201604052509150602082019050610c828186602001518751610ddd565b610c958551820185602001518651610ddd565b509392505050565b610ca5610e22565b610cad610e22565b6000806000610cba610e22565b6020604051805910610cc95750595b9080825280602002602001820160405250945060009350600092505b6020831015610d58576008830260020a870291507fff00000000000000000000000000000000000000000000000000000000000000821615610d4d5781858581518110610d2e57fe5b906020010190600160f860020a031916908160001a9053506001909301925b600190920191610ce5565b83604051805910610d665750595b90808252806020026020018201604052509050600092505b83831015610dd357848381518110610d9257fe5b016020015160f860020a900460f860020a02818481518110610db057fe5b906020010190600160f860020a031916908160001a905350600190920191610d7e565b9695505050505050565b60005b60208210610e035782518452602084019350602083019250602082039150610de0565b6001826020036101000a03905080198351168185511617909352505050565b60206040519081016040526000815290565b815481835581811511610e5857600083815260209020610e58918101908301610e74565b505050565b604080519081016040526000808252602082015290565b61034391905b80821115610e8e5760008155600101610e7a565b509056006163636f756e744761734c696d69740000000000000000000000000000000000a165627a7a72305820f7d8d2eb3301013b121c0ebcd2f8cc73e5b88f1d114d0774765447ae148303240029", storage: {"0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7": "0x03a921f6", "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a": "0x03a921f6", "0x04": "0x01", "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b": "0xd3f1a71d1d8f073f4e725f57bbe14d67da22f888", "0x05": "0x01", "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682": "0x01", "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd": "0x017fa158", "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0": "0x03a921f6", "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d": "0x01"} }}, prevhash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266 }, block: Block { header: Header { parent_hash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266, number: 0, transactions_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, state_root: 32b1d782a6d34eeaf0a3763e809ed11bb51b7117994e10f291a7101393a7f784, receipts_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, log_bloomgas_used: 0, gas_limit: 18446744073709551615, proof: , hash: HashWrap(Cell { value: Some(30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa) }), version: 0 }, body: BlockBody { transactions: [] } } }
node3    | 20171025 03:06:37 - INFO - config check: Config { check_permission: true }
node3    | 20171025 03:06:37 - INFO - init status 0, [48, 168, 205, 145, 131, 40, 73, 210, 250, 17, 173, 172, 86, 13, 83, 162, 84, 216, 38, 27, 119, 118, 11, 189, 17, 63, 21, 145, 127, 234, 64, 250]
node0    | 20171025 03:06:37 - WARN - not expected get_chain.
node0    | 20171025 03:06:37 - INFO - **** begin **** 
node0    | 
node0    | 20171025 03:06:37 - INFO - chain first init, to do init contracts on height eq zero
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x01", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6", result = Ok(0000000000000000000000000dbd369a741319fa5107733e2c9db9929093e3c7)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x00", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563", result = Ok(0000000000000000000000001a702a25c6bca72b67987968f0bfb3a3213c5688)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd", result = Ok(00000000000000000000000000000000000000000000000000000000017fa158)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x05", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b", result = Ok(000000000000000000000000d3f1a71d1d8f073f4e725f57bbe14d67da22f888)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x04", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c", result = Ok(000000000000000000000000532c1400cb002e380da563b918ee607a08a7f5bb)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e", result = Ok(000000000000000000000000a7013f3417eb7427dfb8bc2acd940017ac778407)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x03", result = Ok(0000000000000000000000000000000000000000000000000000000000000004)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d", result = Ok(000000000000000000000000c627b88e1bfe6603644600571e87c31e5c38803d)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b", result = Ok(000000000000000000000000196b6a16488467730756c895943bc43e1e0b0473)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - **** end **** 
node0    | 
node0    | 20171025 03:06:37 - INFO - init genesis Genesis { spec: Spec { alloc: {"0x00000000000000000000000000000000013241a4": Contract { nonce: "1", code: "0x606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663301da870811461006857806354ad6352146100a15780636f4eaf7a146100d6578063c390355c14610166578063dd8a8a05146101a957600080fd5b341561007357600080fd5b61008d600160a060020a036004351660ff602435166101ce565b604051901515815260200160405180910390f35b34156100ac57600080fd5b6100c0600160a060020a036004351661036e565b60405160ff909116815260200160405180910390f35b34156100e157600080fd5b6100ef60ff6004351661039e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a0360043516610489565b6040518082600281111561019557fe5b60ff16815260200191505060405180910390f35b34156101b457600080fd5b61008d600160a060020a036004351660ff6024351661049e565b600160a060020a033316600090815260026020819052604082205460ff16908111156101f657fe5b60ff168260ff1611806102365750600160a060020a03831660009081526002602081905260409091205460ff169081111561022d57fe5b60ff168260ff16105b1561024357506000610368565b60ff8216600114156102af576000805460018101610261838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002905260409020805460ff191660011790555b60ff82166002141561031d57600180548082016102cc838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002908190526040909120805460ff191690911790555b7fca571b17c94502f9fcce67874fd8e4ac41a6139e5dd6f79836393bcc12a0e7658383604051600160a060020a03909216825260ff1660208201526040908101905180910390a15060015b92915050565b600160a060020a038116600090815260026020819052604082205460ff169081111561039657fe5b90505b919050565b6103a66109c8565b60ff82166001141561041c57610415600080548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103ed575b50505050506105d2565b9050610399565b60ff82166002141561039957610415600180548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116103ed5750505050506105d2565b60026020526000908152604090205460ff1681565b600160a060020a033316600090815260026020819052604082205460ff16908111156104c657fe5b60ff168260ff1611806105075750600160a060020a03831660009081526002602081905260409091205460ff16908111156104fd57fe5b60ff168260ff1614155b80610523575082600160a060020a031633600160a060020a0316145b1561053057506000610368565b600160a060020a0383166000908152600260205260409020805460ff1916905560ff82166001141561056957610567836000610653565b505b60ff82166002141561058257610580836001610653565b505b7f76a0b4b4ddd449a15dd0e157534f1220234491c2643c254ead34327e6f51952e8383604051600160a060020a03909216825260ff1660208201526040908101905180910390a150600192915050565b6105da6109c8565b6000808351111561060757610604836000815181106105f557fe5b906020019060200201516107aa565b91505b5060015b825181101561064d5761064361062e6106298584815181106105f557fe5b610877565b61063784610877565b9063ffffffff61089f16565b915060010161060b565b50919050565b60008060006106bb85858054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610693575b5050505050610907565b845490925082106106cf57600092506107a2565b50805b8354600019018110156107545783816001018154811015156106f057fe5b6000918252602090912001548454600160a060020a039091169085908390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016106d2565b83548490600019810190811061076657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055835461079c85600019830161099f565b50600192505b505092915050565b6107b26109c8565b6107ba6109c8565b600060146040518059106107cb5750595b90808252806020026020018201604052509150600090505b6014811015610870578060130360080260020a84600160a060020a031681151561080957fe5b047f01000000000000000000000000000000000000000000000000000000000000000282828151811061083857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107e3565b5092915050565b61087f6109da565b602082016040805190810160405280845181526020019190915292915050565b6108a76109c8565b6108af6109c8565b600083518551016040518059106108c35750595b908082528060200260200182016040525091506020820190506108ec818660200151875161095a565b6108ff855182018560200151865161095a565b509392505050565b6000805b82518110156109535782818151811061092057fe5b90602001906020020151600160a060020a031684600160a060020a0316141561094b57809150610870565b60010161090b565b9392505050565b60005b60208210610980578251845260208401935060208301925060208203915061095d565b6001826020036101000a03905080198351168185511617909352505050565b8154818355818115116109c3576000838152602090206109c39181019083016109f1565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b610a0f91905b80821115610a0b57600081556001016109f7565b5090565b905600a165627a7a72305820dc9dc86fa1ff557a0ae74b02c4963d68c4935924d3dbf19a4d920078ef0d120d0029", storage: {"0x01": "0x01", "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039": "0x01", "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6": "0x0dbd369a741319fa5107733e2c9db9929093e3c7", "0x00": "0x01", "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563": "0x1a702a25c6bca72b67987968f0bfb3a3213c5688", "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37": "0x02"} }, "0x00000000000000000000000000000000013241a3": Contract { nonce: "1", code: "0x606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100d25780633a5b5cf31461010557806350f2ee971461012a57806354f6127f1461014f5780636cf729481461016557806370480275146101ef578063748ba8dd1461020e578063776dd3b6146102295780637a490f7e14610248578063a69257f31461025b578063c9bcec7714610271578063dae99b3a14610287578063dfa874251461029a578063eb93eddf146102bc575b600080fd5b34156100dd57600080fd5b6100f1600160a060020a03600435166102d5565b604051901515815260200160405180910390f35b341561011057600080fd5b6101186102f7565b60405190815260200160405180910390f35b341561013557600080fd5b6100f1600160a060020a0360043516602435604435610346565b341561015a57600080fd5b6101186004356103d5565b341561017057600080fd5b610178610411565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b457808201518382015260200161019c565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fa57600080fd5b6100f1600160a060020a0360043516610481565b341561021957600080fd5b6100f16004356024351515610500565b341561023457600080fd5b610118600160a060020a0360043516610582565b341561025357600080fd5b61017861062e565b341561026657600080fd5b6100f1600435610690565b341561027c57600080fd5b6100f1600435610771565b341561029257600080fd5b61011861083e565b34156102a557600080fd5b6100f1600160a060020a036004351660243561087a565b34156102c757600080fd5b6100f16004356024356109b6565b600160a060020a03811660009081526020819052604090205460ff165b919050565b7f626c6f636b4761734c696d69740000000000000000000000000000000000000060005260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7545b90565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380851660008181526003602090815260408083208884529091529081902085905533909216918591907f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578799086905190815260200160405180910390a45060019392505050565b60008181526001602052604081205460ff161561040157506000818152600260205260409020546102f2565b61040a82610a2c565b90506102f2565b610419610e22565b61047c600480548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610454575b5050505050610a98565b905090565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380831660008181526020819052604090819020805460ff1916600117905533909216917f224c2f3a0794342c616e2e1c9fdfac78b745825dd090fb47bd157a9287b24efc905160405180910390a35060016102f2565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526001602052604090819020805460ff191684151590811790915533600160a060020a03169185907f05b4a832711fc3318602fc0b4685ea4629b1bae830a0bdab94856389173a7217905160405180910390a45060015b92915050565b600160a060020a0381166000908152600360209081526040808320600080516020610e93833981519152845290915281205415156105f95750600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd546102f2565b50600160a060020a03166000908152600360209081526040808320600080516020610e93833981519152845290915290205490565b610636610e22565b61047c600580548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b81548152600190910190602001808311610671575b5050505050610b13565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806106ce57508083105b156106d857600080fd5b7f626c6f636b4761734c696d697400000000000000000000000000000000000000600081905260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a4600194505050505b50919050565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806107af57508083105b156107b957600080fd5b600080516020610e93833981519152600081905260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a46001945050505061076b565b600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd5490565b600160a060020a0333166000908152602081905260408120548190819060ff16156100cd5783677fffffffffffffff623fffff818311806108ba57508083105b156108c457600080fd5b600160a060020a0388166000908152600360209081526040808320600080516020610e9383398151915280855292529091208890556004805491965088955090600181016109128382610e34565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a1617905560058054600181016109568382610e34565b506000918252602090912001849055600160a060020a033381169086908a167f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578798760405190815260200160405180910390a4506001979650505050505050565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526002602052604090819020839055600160a060020a03331690839085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db905160405180910390a450600161057c565b600160a060020a0333166000908152600360209081526040808320848452909152812054819015610a8257600160a060020a0333166000908152600360209081526040808320868452909152902054915061076b565b600083815260026020526040902054915061076b565b610aa0610e22565b60008083511115610acd57610aca83600081518110610abb57fe5b90602001906020020151610b74565b91505b5060015b825181101561076b57610b09610af4610aef858481518110610abb57fe5b610c0d565b610afd84610c0d565b9063ffffffff610c3516565b9150600101610ad1565b610b1b610e22565b60008083511115610b4857610b4583600081518110610b3657fe5b90602001906020020151610c9d565b91505b5060015b825181101561076b57610b6a610af4610aef858481518110610b3657fe5b9150600101610b4c565b610b7c610e22565b610b84610e22565b60006014604051805910610b955750595b90808252806020026020018201604052509150600090505b6014811015610c06578060130360080260020a84600160a060020a0316811515610bd357fe5b0460f860020a02828281518110610be657fe5b906020010190600160f860020a031916908160001a905350600101610bad565b5092915050565b610c15610e5d565b602082016040805190810160405280845181526020019190915292915050565b610c3d610e22565b610c45610e22565b60008351855101604051805910610c595750595b90808252806020026020018201604052509150602082019050610c828186602001518751610ddd565b610c958551820185602001518651610ddd565b509392505050565b610ca5610e22565b610cad610e22565b6000806000610cba610e22565b6020604051805910610cc95750595b9080825280602002602001820160405250945060009350600092505b6020831015610d58576008830260020a870291507fff00000000000000000000000000000000000000000000000000000000000000821615610d4d5781858581518110610d2e57fe5b906020010190600160f860020a031916908160001a9053506001909301925b600190920191610ce5565b83604051805910610d665750595b90808252806020026020018201604052509050600092505b83831015610dd357848381518110610d9257fe5b016020015160f860020a900460f860020a02818481518110610db057fe5b906020010190600160f860020a031916908160001a905350600190920191610d7e565b9695505050505050565b60005b60208210610e035782518452602084019350602083019250602082039150610de0565b6001826020036101000a03905080198351168185511617909352505050565b60206040519081016040526000815290565b815481835581811511610e5857600083815260209020610e58918101908301610e74565b505050565b604080519081016040526000808252602082015290565b61034391905b80821115610e8e5760008155600101610e7a565b509056006163636f756e744761734c696d69740000000000000000000000000000000000a165627a7a72305820f7d8d2eb3301013b121c0ebcd2f8cc73e5b88f1d114d0774765447ae148303240029", storage: {"0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd": "0x017fa158", "0x05": "0x01", "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a": "0x03a921f6", "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b": "0xd3f1a71d1d8f073f4e725f57bbe14d67da22f888", "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d": "0x01", "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7": "0x03a921f6", "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0": "0x03a921f6", "0x04": "0x01", "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682": "0x01"} }, "0x00000000000000000000000000000000013241a2": Contract { nonce: "1", code: "0x6060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100905780632d4ede93146100c357806330ccebb5146100e2578063609df32f14610117578063645b8b1b146101a157806370480275146101e4578063dd4c97a014610203578063ddad2ffe14610222575b600080fd5b341561009b57600080fd5b6100af600160a060020a0360043516610241565b604051901515815260200160405180910390f35b34156100ce57600080fd5b6100af600160a060020a0360043516610263565b34156100ed57600080fd5b610101600160a060020a036004351661044a565b60405160ff909116815260200160405180910390f35b341561012257600080fd5b61012a610477565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016657808201518382015260200161014e565b50505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57600080fd5b6101c0600160a060020a03600435166104e8565b604051808260028111156101d057fe5b60ff16815260200191505060405180910390f35b34156101ef57600080fd5b6100af600160a060020a03600435166104fd565b341561020e57600080fd5b6100af600160a060020a036004351661057f565b341561022d57600080fd5b6100af600160a060020a03600435166106b6565b600160a060020a03811660009081526001602052604090205460ff165b919050565b600160a060020a0333166000908152600160205260408120548190819060ff161561008b574360009081526002602052604090205460ff16151561008b576002600160a060020a03851660009081526020819052604090205460ff1660028111156102ca57fe5b146102d85760009250610443565b6102e18461078a565b60035490925082106102f65760009250610443565b50600160a060020a0383166000908152602081905260409020805460ff19169055805b6003546000190181101561039c57600380546001830190811061033857fe5b60009182526020909120015460038054600160a060020a03909216918390811061035e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610319565b6003805460001981019081106103ae57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905560038054906103e79060001983016109fc565b504360009081526002602052604090819020805460ff191690557f74976f07ac4bfb6a02b2dbd3bc158d4984ee6027d938e870692126ca9e1931d590859051600160a060020a03909116815260200160405180910390a1600192505b5050919050565b600160a060020a03811660009081526020819052604081205460ff16600281111561047157fe5b92915050565b61047f610a25565b6104e260038054806020026020016040519081016040528092919081815260200182805480156104d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ba575b50505050506107df565b90505b90565b60006020819052908152604090205460ff1681565b600160a060020a03331660009081526001602052604081205460ff161561008b57600160a060020a03808316600081815260016020819052604091829020805460ff1916909117905533909216917f99ad91c72e4fcc0a37d0481b982aec5c0c78491d30d39e65338bec15fa9cc4b7905160405180910390a35060015b61025e565b600160a060020a03331660009081526001602052604081205460ff161561008b574360009081526002602052604090205460ff16151561008b576001600160a060020a03831660009081526020819052604090205460ff1660028111156105e257fe5b146105ef575060006106b1565b600160a060020a0382166000908152602081815260408083208054600260ff199182168117909255438552925290912080549091166001908117909155600380549091810161063e83826109fc565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f5d55f24dd047ef52a5f36ddefc8c424e4b26c8415d8758be1bbb88b5c65e04eb82604051600160a060020a03909116815260200160405180910390a15060015b61057a565b60006001600160a060020a03831660009081526020819052604090205460ff1660028111156106e157fe5b148061071357506002600160a060020a03831660009081526020819052604090205460ff16600281111561071157fe5b145b156107205750600061025e565b600160a060020a03821660009081526020819052604090819020805460ff191660011790557ffd96b5bdd2e0412ade018159455c7af2bed1366ab61906962a1b5638f29c68c190839051600160a060020a03909116815260200160405180910390a1506001919050565b6000805b6003548110156107d55760038054829081106107a657fe5b600091825260209091200154600160a060020a03848116911614156107cd578091506107d9565b60010161078e565b8091505b50919050565b6107e7610a25565b60008083511115610814576108118360008151811061080257fe5b9060200190602002015161085a565b91505b5060015b82518110156107d95761085061083b61083685848151811061080257fe5b610927565b61084484610927565b9063ffffffff61094f16565b9150600101610818565b610862610a25565b61086a610a25565b6000601460405180591061087b5750595b90808252806020026020018201604052509150600090505b6014811015610920578060130360080260020a84600160a060020a03168115156108b957fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106108e857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610893565b5092915050565b61092f610a37565b602082016040805190810160405280845181526020019190915292915050565b610957610a25565b61095f610a25565b600083518551016040518059106109735750595b9080825280602002602001820160405250915060208201905061099c81866020015187516109b7565b6109af85518201856020015186516109b7565b509392505050565b60005b602082106109dd57825184526020840193506020830192506020820391506109ba565b6001826020036101000a03905080198351168185511617909352505050565b815481835581811511610a2057600083815260209020610a20918101908301610a4e565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b6104e591905b80821115610a685760008155600101610a54565b50905600a165627a7a7230582051c9a7e853bbdee43a2a15e229e58b1470ad267263a5eab4aac5d646c2031ddb0029", storage: {"0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c": "0x532c1400cb002e380da563b918ee607a08a7f5bb", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e": "0xa7013f3417eb7427dfb8bc2acd940017ac778407", "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e": "0x01", "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5": "0x02", "0x03": "0x04", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d": "0xc627b88e1bfe6603644600571e87c31e5c38803d", "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc": "0x02", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b": "0x196b6a16488467730756c895943bc43e1e0b0473", "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83": "0x02", "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c": "0x02"} }}, prevhash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266 }, block: Block { header: Header { parent_hash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266, number: 0, transactions_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, state_root: 32b1d782a6d34eeaf0a3763e809ed11bb51b7117994e10f291a7101393a7f784, receipts_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, log_bloomgas_used: 0, gas_limit: 18446744073709551615, proof: , hash: HashWrap(Cell { value: Some(30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa) }), version: 0 }, body: BlockBody { transactions: [] } } }
node0    | 20171025 03:06:37 - INFO - config check: Config { check_permission: true }
node0    | 20171025 03:06:37 - INFO - init status 0, [48, 168, 205, 145, 131, 40, 73, 210, 250, 17, 173, 172, 86, 13, 83, 162, 84, 216, 38, 27, 119, 118, 11, 189, 17, 63, 21, 145, 127, 234, 64, 250]
node2    | 20171025 03:06:37 - WARN - not expected get_chain.
node2    | 20171025 03:06:37 - INFO - **** begin **** 
node2    | 
node2    | 20171025 03:06:37 - INFO - chain first init, to do init contracts on height eq zero
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6", result = Ok(0000000000000000000000000dbd369a741319fa5107733e2c9db9929093e3c7)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x01", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x00", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563", result = Ok(0000000000000000000000001a702a25c6bca72b67987968f0bfb3a3213c5688)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c", result = Ok(000000000000000000000000532c1400cb002e380da563b918ee607a08a7f5bb)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b", result = Ok(000000000000000000000000196b6a16488467730756c895943bc43e1e0b0473)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x03", result = Ok(0000000000000000000000000000000000000000000000000000000000000004)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e", result = Ok(000000000000000000000000a7013f3417eb7427dfb8bc2acd940017ac778407)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d", result = Ok(000000000000000000000000c627b88e1bfe6603644600571e87c31e5c38803d)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b", result = Ok(000000000000000000000000d3f1a71d1d8f073f4e725f57bbe14d67da22f888)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x04", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x05", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd", result = Ok(00000000000000000000000000000000000000000000000000000000017fa158)
node2    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node2    | 20171025 03:06:37 - INFO - **** end **** 
node2    | 
node2    | 20171025 03:06:37 - INFO - init genesis Genesis { spec: Spec { alloc: {"0x00000000000000000000000000000000013241a4": Contract { nonce: "1", code: "0x606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663301da870811461006857806354ad6352146100a15780636f4eaf7a146100d6578063c390355c14610166578063dd8a8a05146101a957600080fd5b341561007357600080fd5b61008d600160a060020a036004351660ff602435166101ce565b604051901515815260200160405180910390f35b34156100ac57600080fd5b6100c0600160a060020a036004351661036e565b60405160ff909116815260200160405180910390f35b34156100e157600080fd5b6100ef60ff6004351661039e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a0360043516610489565b6040518082600281111561019557fe5b60ff16815260200191505060405180910390f35b34156101b457600080fd5b61008d600160a060020a036004351660ff6024351661049e565b600160a060020a033316600090815260026020819052604082205460ff16908111156101f657fe5b60ff168260ff1611806102365750600160a060020a03831660009081526002602081905260409091205460ff169081111561022d57fe5b60ff168260ff16105b1561024357506000610368565b60ff8216600114156102af576000805460018101610261838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002905260409020805460ff191660011790555b60ff82166002141561031d57600180548082016102cc838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002908190526040909120805460ff191690911790555b7fca571b17c94502f9fcce67874fd8e4ac41a6139e5dd6f79836393bcc12a0e7658383604051600160a060020a03909216825260ff1660208201526040908101905180910390a15060015b92915050565b600160a060020a038116600090815260026020819052604082205460ff169081111561039657fe5b90505b919050565b6103a66109c8565b60ff82166001141561041c57610415600080548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103ed575b50505050506105d2565b9050610399565b60ff82166002141561039957610415600180548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116103ed5750505050506105d2565b60026020526000908152604090205460ff1681565b600160a060020a033316600090815260026020819052604082205460ff16908111156104c657fe5b60ff168260ff1611806105075750600160a060020a03831660009081526002602081905260409091205460ff16908111156104fd57fe5b60ff168260ff1614155b80610523575082600160a060020a031633600160a060020a0316145b1561053057506000610368565b600160a060020a0383166000908152600260205260409020805460ff1916905560ff82166001141561056957610567836000610653565b505b60ff82166002141561058257610580836001610653565b505b7f76a0b4b4ddd449a15dd0e157534f1220234491c2643c254ead34327e6f51952e8383604051600160a060020a03909216825260ff1660208201526040908101905180910390a150600192915050565b6105da6109c8565b6000808351111561060757610604836000815181106105f557fe5b906020019060200201516107aa565b91505b5060015b825181101561064d5761064361062e6106298584815181106105f557fe5b610877565b61063784610877565b9063ffffffff61089f16565b915060010161060b565b50919050565b60008060006106bb85858054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610693575b5050505050610907565b845490925082106106cf57600092506107a2565b50805b8354600019018110156107545783816001018154811015156106f057fe5b6000918252602090912001548454600160a060020a039091169085908390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016106d2565b83548490600019810190811061076657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055835461079c85600019830161099f565b50600192505b505092915050565b6107b26109c8565b6107ba6109c8565b600060146040518059106107cb5750595b90808252806020026020018201604052509150600090505b6014811015610870578060130360080260020a84600160a060020a031681151561080957fe5b047f01000000000000000000000000000000000000000000000000000000000000000282828151811061083857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107e3565b5092915050565b61087f6109da565b602082016040805190810160405280845181526020019190915292915050565b6108a76109c8565b6108af6109c8565b600083518551016040518059106108c35750595b908082528060200260200182016040525091506020820190506108ec818660200151875161095a565b6108ff855182018560200151865161095a565b509392505050565b6000805b82518110156109535782818151811061092057fe5b90602001906020020151600160a060020a031684600160a060020a0316141561094b57809150610870565b60010161090b565b9392505050565b60005b60208210610980578251845260208401935060208301925060208203915061095d565b6001826020036101000a03905080198351168185511617909352505050565b8154818355818115116109c3576000838152602090206109c39181019083016109f1565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b610a0f91905b80821115610a0b57600081556001016109f7565b5090565b905600a165627a7a72305820dc9dc86fa1ff557a0ae74b02c4963d68c4935924d3dbf19a4d920078ef0d120d0029", storage: {"0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6": "0x0dbd369a741319fa5107733e2c9db9929093e3c7", "0x01": "0x01", "0x00": "0x01", "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039": "0x01", "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37": "0x02", "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563": "0x1a702a25c6bca72b67987968f0bfb3a3213c5688"} }, "0x00000000000000000000000000000000013241a2": Contract { nonce: "1", code: "0x6060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100905780632d4ede93146100c357806330ccebb5146100e2578063609df32f14610117578063645b8b1b146101a157806370480275146101e4578063dd4c97a014610203578063ddad2ffe14610222575b600080fd5b341561009b57600080fd5b6100af600160a060020a0360043516610241565b604051901515815260200160405180910390f35b34156100ce57600080fd5b6100af600160a060020a0360043516610263565b34156100ed57600080fd5b610101600160a060020a036004351661044a565b60405160ff909116815260200160405180910390f35b341561012257600080fd5b61012a610477565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016657808201518382015260200161014e565b50505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57600080fd5b6101c0600160a060020a03600435166104e8565b604051808260028111156101d057fe5b60ff16815260200191505060405180910390f35b34156101ef57600080fd5b6100af600160a060020a03600435166104fd565b341561020e57600080fd5b6100af600160a060020a036004351661057f565b341561022d57600080fd5b6100af600160a060020a03600435166106b6565b600160a060020a03811660009081526001602052604090205460ff165b919050565b600160a060020a0333166000908152600160205260408120548190819060ff161561008b574360009081526002602052604090205460ff16151561008b576002600160a060020a03851660009081526020819052604090205460ff1660028111156102ca57fe5b146102d85760009250610443565b6102e18461078a565b60035490925082106102f65760009250610443565b50600160a060020a0383166000908152602081905260409020805460ff19169055805b6003546000190181101561039c57600380546001830190811061033857fe5b60009182526020909120015460038054600160a060020a03909216918390811061035e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610319565b6003805460001981019081106103ae57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905560038054906103e79060001983016109fc565b504360009081526002602052604090819020805460ff191690557f74976f07ac4bfb6a02b2dbd3bc158d4984ee6027d938e870692126ca9e1931d590859051600160a060020a03909116815260200160405180910390a1600192505b5050919050565b600160a060020a03811660009081526020819052604081205460ff16600281111561047157fe5b92915050565b61047f610a25565b6104e260038054806020026020016040519081016040528092919081815260200182805480156104d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ba575b50505050506107df565b90505b90565b60006020819052908152604090205460ff1681565b600160a060020a03331660009081526001602052604081205460ff161561008b57600160a060020a03808316600081815260016020819052604091829020805460ff1916909117905533909216917f99ad91c72e4fcc0a37d0481b982aec5c0c78491d30d39e65338bec15fa9cc4b7905160405180910390a35060015b61025e565b600160a060020a03331660009081526001602052604081205460ff161561008b574360009081526002602052604090205460ff16151561008b576001600160a060020a03831660009081526020819052604090205460ff1660028111156105e257fe5b146105ef575060006106b1565b600160a060020a0382166000908152602081815260408083208054600260ff199182168117909255438552925290912080549091166001908117909155600380549091810161063e83826109fc565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f5d55f24dd047ef52a5f36ddefc8c424e4b26c8415d8758be1bbb88b5c65e04eb82604051600160a060020a03909116815260200160405180910390a15060015b61057a565b60006001600160a060020a03831660009081526020819052604090205460ff1660028111156106e157fe5b148061071357506002600160a060020a03831660009081526020819052604090205460ff16600281111561071157fe5b145b156107205750600061025e565b600160a060020a03821660009081526020819052604090819020805460ff191660011790557ffd96b5bdd2e0412ade018159455c7af2bed1366ab61906962a1b5638f29c68c190839051600160a060020a03909116815260200160405180910390a1506001919050565b6000805b6003548110156107d55760038054829081106107a657fe5b600091825260209091200154600160a060020a03848116911614156107cd578091506107d9565b60010161078e565b8091505b50919050565b6107e7610a25565b60008083511115610814576108118360008151811061080257fe5b9060200190602002015161085a565b91505b5060015b82518110156107d95761085061083b61083685848151811061080257fe5b610927565b61084484610927565b9063ffffffff61094f16565b9150600101610818565b610862610a25565b61086a610a25565b6000601460405180591061087b5750595b90808252806020026020018201604052509150600090505b6014811015610920578060130360080260020a84600160a060020a03168115156108b957fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106108e857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610893565b5092915050565b61092f610a37565b602082016040805190810160405280845181526020019190915292915050565b610957610a25565b61095f610a25565b600083518551016040518059106109735750595b9080825280602002602001820160405250915060208201905061099c81866020015187516109b7565b6109af85518201856020015186516109b7565b509392505050565b60005b602082106109dd57825184526020840193506020830192506020820391506109ba565b6001826020036101000a03905080198351168185511617909352505050565b815481835581811511610a2057600083815260209020610a20918101908301610a4e565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b6104e591905b80821115610a685760008155600101610a54565b50905600a165627a7a7230582051c9a7e853bbdee43a2a15e229e58b1470ad267263a5eab4aac5d646c2031ddb0029", storage: {"0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c": "0x532c1400cb002e380da563b918ee607a08a7f5bb", "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83": "0x02", "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5": "0x02", "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc": "0x02", "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e": "0x01", "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c": "0x02", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b": "0x196b6a16488467730756c895943bc43e1e0b0473", "0x03": "0x04", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e": "0xa7013f3417eb7427dfb8bc2acd940017ac778407", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d": "0xc627b88e1bfe6603644600571e87c31e5c38803d"} }, "0x00000000000000000000000000000000013241a3": Contract { nonce: "1", code: "0x606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100d25780633a5b5cf31461010557806350f2ee971461012a57806354f6127f1461014f5780636cf729481461016557806370480275146101ef578063748ba8dd1461020e578063776dd3b6146102295780637a490f7e14610248578063a69257f31461025b578063c9bcec7714610271578063dae99b3a14610287578063dfa874251461029a578063eb93eddf146102bc575b600080fd5b34156100dd57600080fd5b6100f1600160a060020a03600435166102d5565b604051901515815260200160405180910390f35b341561011057600080fd5b6101186102f7565b60405190815260200160405180910390f35b341561013557600080fd5b6100f1600160a060020a0360043516602435604435610346565b341561015a57600080fd5b6101186004356103d5565b341561017057600080fd5b610178610411565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b457808201518382015260200161019c565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fa57600080fd5b6100f1600160a060020a0360043516610481565b341561021957600080fd5b6100f16004356024351515610500565b341561023457600080fd5b610118600160a060020a0360043516610582565b341561025357600080fd5b61017861062e565b341561026657600080fd5b6100f1600435610690565b341561027c57600080fd5b6100f1600435610771565b341561029257600080fd5b61011861083e565b34156102a557600080fd5b6100f1600160a060020a036004351660243561087a565b34156102c757600080fd5b6100f16004356024356109b6565b600160a060020a03811660009081526020819052604090205460ff165b919050565b7f626c6f636b4761734c696d69740000000000000000000000000000000000000060005260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7545b90565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380851660008181526003602090815260408083208884529091529081902085905533909216918591907f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578799086905190815260200160405180910390a45060019392505050565b60008181526001602052604081205460ff161561040157506000818152600260205260409020546102f2565b61040a82610a2c565b90506102f2565b610419610e22565b61047c600480548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610454575b5050505050610a98565b905090565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380831660008181526020819052604090819020805460ff1916600117905533909216917f224c2f3a0794342c616e2e1c9fdfac78b745825dd090fb47bd157a9287b24efc905160405180910390a35060016102f2565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526001602052604090819020805460ff191684151590811790915533600160a060020a03169185907f05b4a832711fc3318602fc0b4685ea4629b1bae830a0bdab94856389173a7217905160405180910390a45060015b92915050565b600160a060020a0381166000908152600360209081526040808320600080516020610e93833981519152845290915281205415156105f95750600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd546102f2565b50600160a060020a03166000908152600360209081526040808320600080516020610e93833981519152845290915290205490565b610636610e22565b61047c600580548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b81548152600190910190602001808311610671575b5050505050610b13565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806106ce57508083105b156106d857600080fd5b7f626c6f636b4761734c696d697400000000000000000000000000000000000000600081905260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a4600194505050505b50919050565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806107af57508083105b156107b957600080fd5b600080516020610e93833981519152600081905260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a46001945050505061076b565b600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd5490565b600160a060020a0333166000908152602081905260408120548190819060ff16156100cd5783677fffffffffffffff623fffff818311806108ba57508083105b156108c457600080fd5b600160a060020a0388166000908152600360209081526040808320600080516020610e9383398151915280855292529091208890556004805491965088955090600181016109128382610e34565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a1617905560058054600181016109568382610e34565b506000918252602090912001849055600160a060020a033381169086908a167f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578798760405190815260200160405180910390a4506001979650505050505050565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526002602052604090819020839055600160a060020a03331690839085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db905160405180910390a450600161057c565b600160a060020a0333166000908152600360209081526040808320848452909152812054819015610a8257600160a060020a0333166000908152600360209081526040808320868452909152902054915061076b565b600083815260026020526040902054915061076b565b610aa0610e22565b60008083511115610acd57610aca83600081518110610abb57fe5b90602001906020020151610b74565b91505b5060015b825181101561076b57610b09610af4610aef858481518110610abb57fe5b610c0d565b610afd84610c0d565b9063ffffffff610c3516565b9150600101610ad1565b610b1b610e22565b60008083511115610b4857610b4583600081518110610b3657fe5b90602001906020020151610c9d565b91505b5060015b825181101561076b57610b6a610af4610aef858481518110610b3657fe5b9150600101610b4c565b610b7c610e22565b610b84610e22565b60006014604051805910610b955750595b90808252806020026020018201604052509150600090505b6014811015610c06578060130360080260020a84600160a060020a0316811515610bd357fe5b0460f860020a02828281518110610be657fe5b906020010190600160f860020a031916908160001a905350600101610bad565b5092915050565b610c15610e5d565b602082016040805190810160405280845181526020019190915292915050565b610c3d610e22565b610c45610e22565b60008351855101604051805910610c595750595b90808252806020026020018201604052509150602082019050610c828186602001518751610ddd565b610c958551820185602001518651610ddd565b509392505050565b610ca5610e22565b610cad610e22565b6000806000610cba610e22565b6020604051805910610cc95750595b9080825280602002602001820160405250945060009350600092505b6020831015610d58576008830260020a870291507fff00000000000000000000000000000000000000000000000000000000000000821615610d4d5781858581518110610d2e57fe5b906020010190600160f860020a031916908160001a9053506001909301925b600190920191610ce5565b83604051805910610d665750595b90808252806020026020018201604052509050600092505b83831015610dd357848381518110610d9257fe5b016020015160f860020a900460f860020a02818481518110610db057fe5b906020010190600160f860020a031916908160001a905350600190920191610d7e565b9695505050505050565b60005b60208210610e035782518452602084019350602083019250602082039150610de0565b6001826020036101000a03905080198351168185511617909352505050565b60206040519081016040526000815290565b815481835581811511610e5857600083815260209020610e58918101908301610e74565b505050565b604080519081016040526000808252602082015290565b61034391905b80821115610e8e5760008155600101610e7a565b509056006163636f756e744761734c696d69740000000000000000000000000000000000a165627a7a72305820f7d8d2eb3301013b121c0ebcd2f8cc73e5b88f1d114d0774765447ae148303240029", storage: {"0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b": "0xd3f1a71d1d8f073f4e725f57bbe14d67da22f888", "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d": "0x01", "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a": "0x03a921f6", "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7": "0x03a921f6", "0x04": "0x01", "0x05": "0x01", "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0": "0x03a921f6", "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd": "0x017fa158", "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682": "0x01"} }}, prevhash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266 }, block: Block { header: Header { parent_hash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266, number: 0, transactions_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, state_root: 32b1d782a6d34eeaf0a3763e809ed11bb51b7117994e10f291a7101393a7f784, receipts_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, log_bloomgas_used: 0, gas_limit: 18446744073709551615, proof: , hash: HashWrap(Cell { value: Some(30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa) }), version: 0 }, body: BlockBody { transactions: [] } } }
node2    | 20171025 03:06:37 - INFO - config check: Config { check_permission: true }
node2    | 20171025 03:06:37 - INFO - init status 0, [48, 168, 205, 145, 131, 40, 73, 210, 250, 17, 173, 172, 86, 13, 83, 162, 84, 216, 38, 27, 119, 118, 11, 189, 17, 63, 21, 145, 127, 234, 64, 250]
node1    | 20171025 03:06:38 - WARN - not expected get_chain.
node1    | 20171025 03:06:38 - INFO - **** begin **** 
node1    | 
node1    | 20171025 03:06:38 - INFO - chain first init, to do init contracts on height eq zero
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x03", result = Ok(0000000000000000000000000000000000000000000000000000000000000004)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d", result = Ok(000000000000000000000000c627b88e1bfe6603644600571e87c31e5c38803d)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c", result = Ok(000000000000000000000000532c1400cb002e380da563b918ee607a08a7f5bb)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b", result = Ok(000000000000000000000000196b6a16488467730756c895943bc43e1e0b0473)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e", result = Ok(000000000000000000000000a7013f3417eb7427dfb8bc2acd940017ac778407)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x01", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563", result = Ok(0000000000000000000000001a702a25c6bca72b67987968f0bfb3a3213c5688)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x00", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a4, key = "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6", result = Ok(0000000000000000000000000dbd369a741319fa5107733e2c9db9929093e3c7)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd", result = Ok(00000000000000000000000000000000000000000000000000000000017fa158)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b", result = Ok(000000000000000000000000d3f1a71d1d8f073f4e725f57bbe14d67da22f888)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x04", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x05", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node1    | 20171025 03:06:38 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node1    | 20171025 03:06:38 - INFO - **** end **** 
node1    | 
node1    | 20171025 03:06:38 - INFO - init genesis Genesis { spec: Spec { alloc: {"0x00000000000000000000000000000000013241a2": Contract { nonce: "1", code: "0x6060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100905780632d4ede93146100c357806330ccebb5146100e2578063609df32f14610117578063645b8b1b146101a157806370480275146101e4578063dd4c97a014610203578063ddad2ffe14610222575b600080fd5b341561009b57600080fd5b6100af600160a060020a0360043516610241565b604051901515815260200160405180910390f35b34156100ce57600080fd5b6100af600160a060020a0360043516610263565b34156100ed57600080fd5b610101600160a060020a036004351661044a565b60405160ff909116815260200160405180910390f35b341561012257600080fd5b61012a610477565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016657808201518382015260200161014e565b50505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57600080fd5b6101c0600160a060020a03600435166104e8565b604051808260028111156101d057fe5b60ff16815260200191505060405180910390f35b34156101ef57600080fd5b6100af600160a060020a03600435166104fd565b341561020e57600080fd5b6100af600160a060020a036004351661057f565b341561022d57600080fd5b6100af600160a060020a03600435166106b6565b600160a060020a03811660009081526001602052604090205460ff165b919050565b600160a060020a0333166000908152600160205260408120548190819060ff161561008b574360009081526002602052604090205460ff16151561008b576002600160a060020a03851660009081526020819052604090205460ff1660028111156102ca57fe5b146102d85760009250610443565b6102e18461078a565b60035490925082106102f65760009250610443565b50600160a060020a0383166000908152602081905260409020805460ff19169055805b6003546000190181101561039c57600380546001830190811061033857fe5b60009182526020909120015460038054600160a060020a03909216918390811061035e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610319565b6003805460001981019081106103ae57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905560038054906103e79060001983016109fc565b504360009081526002602052604090819020805460ff191690557f74976f07ac4bfb6a02b2dbd3bc158d4984ee6027d938e870692126ca9e1931d590859051600160a060020a03909116815260200160405180910390a1600192505b5050919050565b600160a060020a03811660009081526020819052604081205460ff16600281111561047157fe5b92915050565b61047f610a25565b6104e260038054806020026020016040519081016040528092919081815260200182805480156104d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ba575b50505050506107df565b90505b90565b60006020819052908152604090205460ff1681565b600160a060020a03331660009081526001602052604081205460ff161561008b57600160a060020a03808316600081815260016020819052604091829020805460ff1916909117905533909216917f99ad91c72e4fcc0a37d0481b982aec5c0c78491d30d39e65338bec15fa9cc4b7905160405180910390a35060015b61025e565b600160a060020a03331660009081526001602052604081205460ff161561008b574360009081526002602052604090205460ff16151561008b576001600160a060020a03831660009081526020819052604090205460ff1660028111156105e257fe5b146105ef575060006106b1565b600160a060020a0382166000908152602081815260408083208054600260ff199182168117909255438552925290912080549091166001908117909155600380549091810161063e83826109fc565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f5d55f24dd047ef52a5f36ddefc8c424e4b26c8415d8758be1bbb88b5c65e04eb82604051600160a060020a03909116815260200160405180910390a15060015b61057a565b60006001600160a060020a03831660009081526020819052604090205460ff1660028111156106e157fe5b148061071357506002600160a060020a03831660009081526020819052604090205460ff16600281111561071157fe5b145b156107205750600061025e565b600160a060020a03821660009081526020819052604090819020805460ff191660011790557ffd96b5bdd2e0412ade018159455c7af2bed1366ab61906962a1b5638f29c68c190839051600160a060020a03909116815260200160405180910390a1506001919050565b6000805b6003548110156107d55760038054829081106107a657fe5b600091825260209091200154600160a060020a03848116911614156107cd578091506107d9565b60010161078e565b8091505b50919050565b6107e7610a25565b60008083511115610814576108118360008151811061080257fe5b9060200190602002015161085a565b91505b5060015b82518110156107d95761085061083b61083685848151811061080257fe5b610927565b61084484610927565b9063ffffffff61094f16565b9150600101610818565b610862610a25565b61086a610a25565b6000601460405180591061087b5750595b90808252806020026020018201604052509150600090505b6014811015610920578060130360080260020a84600160a060020a03168115156108b957fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106108e857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610893565b5092915050565b61092f610a37565b602082016040805190810160405280845181526020019190915292915050565b610957610a25565b61095f610a25565b600083518551016040518059106109735750595b9080825280602002602001820160405250915060208201905061099c81866020015187516109b7565b6109af85518201856020015186516109b7565b509392505050565b60005b602082106109dd57825184526020840193506020830192506020820391506109ba565b6001826020036101000a03905080198351168185511617909352505050565b815481835581811511610a2057600083815260209020610a20918101908301610a4e565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b6104e591905b80821115610a685760008155600101610a54565b50905600a165627a7a7230582051c9a7e853bbdee43a2a15e229e58b1470ad267263a5eab4aac5d646c2031ddb0029", storage: {"0x03": "0x04", "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c": "0x02", "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc": "0x02", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d": "0xc627b88e1bfe6603644600571e87c31e5c38803d", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c": "0x532c1400cb002e380da563b918ee607a08a7f5bb", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b": "0x196b6a16488467730756c895943bc43e1e0b0473", "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5": "0x02", "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83": "0x02", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e": "0xa7013f3417eb7427dfb8bc2acd940017ac778407", "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e": "0x01"} }, "0x00000000000000000000000000000000013241a4": Contract { nonce: "1", code: "0x606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663301da870811461006857806354ad6352146100a15780636f4eaf7a146100d6578063c390355c14610166578063dd8a8a05146101a957600080fd5b341561007357600080fd5b61008d600160a060020a036004351660ff602435166101ce565b604051901515815260200160405180910390f35b34156100ac57600080fd5b6100c0600160a060020a036004351661036e565b60405160ff909116815260200160405180910390f35b34156100e157600080fd5b6100ef60ff6004351661039e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a0360043516610489565b6040518082600281111561019557fe5b60ff16815260200191505060405180910390f35b34156101b457600080fd5b61008d600160a060020a036004351660ff6024351661049e565b600160a060020a033316600090815260026020819052604082205460ff16908111156101f657fe5b60ff168260ff1611806102365750600160a060020a03831660009081526002602081905260409091205460ff169081111561022d57fe5b60ff168260ff16105b1561024357506000610368565b60ff8216600114156102af576000805460018101610261838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002905260409020805460ff191660011790555b60ff82166002141561031d57600180548082016102cc838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002908190526040909120805460ff191690911790555b7fca571b17c94502f9fcce67874fd8e4ac41a6139e5dd6f79836393bcc12a0e7658383604051600160a060020a03909216825260ff1660208201526040908101905180910390a15060015b92915050565b600160a060020a038116600090815260026020819052604082205460ff169081111561039657fe5b90505b919050565b6103a66109c8565b60ff82166001141561041c57610415600080548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103ed575b50505050506105d2565b9050610399565b60ff82166002141561039957610415600180548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116103ed5750505050506105d2565b60026020526000908152604090205460ff1681565b600160a060020a033316600090815260026020819052604082205460ff16908111156104c657fe5b60ff168260ff1611806105075750600160a060020a03831660009081526002602081905260409091205460ff16908111156104fd57fe5b60ff168260ff1614155b80610523575082600160a060020a031633600160a060020a0316145b1561053057506000610368565b600160a060020a0383166000908152600260205260409020805460ff1916905560ff82166001141561056957610567836000610653565b505b60ff82166002141561058257610580836001610653565b505b7f76a0b4b4ddd449a15dd0e157534f1220234491c2643c254ead34327e6f51952e8383604051600160a060020a03909216825260ff1660208201526040908101905180910390a150600192915050565b6105da6109c8565b6000808351111561060757610604836000815181106105f557fe5b906020019060200201516107aa565b91505b5060015b825181101561064d5761064361062e6106298584815181106105f557fe5b610877565b61063784610877565b9063ffffffff61089f16565b915060010161060b565b50919050565b60008060006106bb85858054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610693575b5050505050610907565b845490925082106106cf57600092506107a2565b50805b8354600019018110156107545783816001018154811015156106f057fe5b6000918252602090912001548454600160a060020a039091169085908390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016106d2565b83548490600019810190811061076657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055835461079c85600019830161099f565b50600192505b505092915050565b6107b26109c8565b6107ba6109c8565b600060146040518059106107cb5750595b90808252806020026020018201604052509150600090505b6014811015610870578060130360080260020a84600160a060020a031681151561080957fe5b047f01000000000000000000000000000000000000000000000000000000000000000282828151811061083857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107e3565b5092915050565b61087f6109da565b602082016040805190810160405280845181526020019190915292915050565b6108a76109c8565b6108af6109c8565b600083518551016040518059106108c35750595b908082528060200260200182016040525091506020820190506108ec818660200151875161095a565b6108ff855182018560200151865161095a565b509392505050565b6000805b82518110156109535782818151811061092057fe5b90602001906020020151600160a060020a031684600160a060020a0316141561094b57809150610870565b60010161090b565b9392505050565b60005b60208210610980578251845260208401935060208301925060208203915061095d565b6001826020036101000a03905080198351168185511617909352505050565b8154818355818115116109c3576000838152602090206109c39181019083016109f1565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b610a0f91905b80821115610a0b57600081556001016109f7565b5090565b905600a165627a7a72305820dc9dc86fa1ff557a0ae74b02c4963d68c4935924d3dbf19a4d920078ef0d120d0029", storage: {"0x01": "0x01", "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37": "0x02", "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563": "0x1a702a25c6bca72b67987968f0bfb3a3213c5688", "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039": "0x01", "0x00": "0x01", "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6": "0x0dbd369a741319fa5107733e2c9db9929093e3c7"} }, "0x00000000000000000000000000000000013241a3": Contract { nonce: "1", code: "0x606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100d25780633a5b5cf31461010557806350f2ee971461012a57806354f6127f1461014f5780636cf729481461016557806370480275146101ef578063748ba8dd1461020e578063776dd3b6146102295780637a490f7e14610248578063a69257f31461025b578063c9bcec7714610271578063dae99b3a14610287578063dfa874251461029a578063eb93eddf146102bc575b600080fd5b34156100dd57600080fd5b6100f1600160a060020a03600435166102d5565b604051901515815260200160405180910390f35b341561011057600080fd5b6101186102f7565b60405190815260200160405180910390f35b341561013557600080fd5b6100f1600160a060020a0360043516602435604435610346565b341561015a57600080fd5b6101186004356103d5565b341561017057600080fd5b610178610411565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b457808201518382015260200161019c565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fa57600080fd5b6100f1600160a060020a0360043516610481565b341561021957600080fd5b6100f16004356024351515610500565b341561023457600080fd5b610118600160a060020a0360043516610582565b341561025357600080fd5b61017861062e565b341561026657600080fd5b6100f1600435610690565b341561027c57600080fd5b6100f1600435610771565b341561029257600080fd5b61011861083e565b34156102a557600080fd5b6100f1600160a060020a036004351660243561087a565b34156102c757600080fd5b6100f16004356024356109b6565b600160a060020a03811660009081526020819052604090205460ff165b919050565b7f626c6f636b4761734c696d69740000000000000000000000000000000000000060005260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7545b90565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380851660008181526003602090815260408083208884529091529081902085905533909216918591907f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578799086905190815260200160405180910390a45060019392505050565b60008181526001602052604081205460ff161561040157506000818152600260205260409020546102f2565b61040a82610a2c565b90506102f2565b610419610e22565b61047c600480548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610454575b5050505050610a98565b905090565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380831660008181526020819052604090819020805460ff1916600117905533909216917f224c2f3a0794342c616e2e1c9fdfac78b745825dd090fb47bd157a9287b24efc905160405180910390a35060016102f2565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526001602052604090819020805460ff191684151590811790915533600160a060020a03169185907f05b4a832711fc3318602fc0b4685ea4629b1bae830a0bdab94856389173a7217905160405180910390a45060015b92915050565b600160a060020a0381166000908152600360209081526040808320600080516020610e93833981519152845290915281205415156105f95750600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd546102f2565b50600160a060020a03166000908152600360209081526040808320600080516020610e93833981519152845290915290205490565b610636610e22565b61047c600580548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b81548152600190910190602001808311610671575b5050505050610b13565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806106ce57508083105b156106d857600080fd5b7f626c6f636b4761734c696d697400000000000000000000000000000000000000600081905260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a4600194505050505b50919050565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806107af57508083105b156107b957600080fd5b600080516020610e93833981519152600081905260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a46001945050505061076b565b600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd5490565b600160a060020a0333166000908152602081905260408120548190819060ff16156100cd5783677fffffffffffffff623fffff818311806108ba57508083105b156108c457600080fd5b600160a060020a0388166000908152600360209081526040808320600080516020610e9383398151915280855292529091208890556004805491965088955090600181016109128382610e34565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a1617905560058054600181016109568382610e34565b506000918252602090912001849055600160a060020a033381169086908a167f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578798760405190815260200160405180910390a4506001979650505050505050565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526002602052604090819020839055600160a060020a03331690839085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db905160405180910390a450600161057c565b600160a060020a0333166000908152600360209081526040808320848452909152812054819015610a8257600160a060020a0333166000908152600360209081526040808320868452909152902054915061076b565b600083815260026020526040902054915061076b565b610aa0610e22565b60008083511115610acd57610aca83600081518110610abb57fe5b90602001906020020151610b74565b91505b5060015b825181101561076b57610b09610af4610aef858481518110610abb57fe5b610c0d565b610afd84610c0d565b9063ffffffff610c3516565b9150600101610ad1565b610b1b610e22565b60008083511115610b4857610b4583600081518110610b3657fe5b90602001906020020151610c9d565b91505b5060015b825181101561076b57610b6a610af4610aef858481518110610b3657fe5b9150600101610b4c565b610b7c610e22565b610b84610e22565b60006014604051805910610b955750595b90808252806020026020018201604052509150600090505b6014811015610c06578060130360080260020a84600160a060020a0316811515610bd357fe5b0460f860020a02828281518110610be657fe5b906020010190600160f860020a031916908160001a905350600101610bad565b5092915050565b610c15610e5d565b602082016040805190810160405280845181526020019190915292915050565b610c3d610e22565b610c45610e22565b60008351855101604051805910610c595750595b90808252806020026020018201604052509150602082019050610c828186602001518751610ddd565b610c958551820185602001518651610ddd565b509392505050565b610ca5610e22565b610cad610e22565b6000806000610cba610e22565b6020604051805910610cc95750595b9080825280602002602001820160405250945060009350600092505b6020831015610d58576008830260020a870291507fff00000000000000000000000000000000000000000000000000000000000000821615610d4d5781858581518110610d2e57fe5b906020010190600160f860020a031916908160001a9053506001909301925b600190920191610ce5565b83604051805910610d665750595b90808252806020026020018201604052509050600092505b83831015610dd357848381518110610d9257fe5b016020015160f860020a900460f860020a02818481518110610db057fe5b906020010190600160f860020a031916908160001a905350600190920191610d7e565b9695505050505050565b60005b60208210610e035782518452602084019350602083019250602082039150610de0565b6001826020036101000a03905080198351168185511617909352505050565b60206040519081016040526000815290565b815481835581811511610e5857600083815260209020610e58918101908301610e74565b505050565b604080519081016040526000808252602082015290565b61034391905b80821115610e8e5760008155600101610e7a565b509056006163636f756e744761734c696d69740000000000000000000000000000000000a165627a7a72305820f7d8d2eb3301013b121c0ebcd2f8cc73e5b88f1d114d0774765447ae148303240029", storage: {"0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682": "0x01", "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd": "0x017fa158", "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a": "0x03a921f6", "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b": "0xd3f1a71d1d8f073f4e725f57bbe14d67da22f888", "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0": "0x03a921f6", "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d": "0x01", "0x04": "0x01", "0x05": "0x01", "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7": "0x03a921f6"} }}, prevhash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266 }, block: Block { header: Header { parent_hash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266, number: 0, transactions_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, state_root: 32b1d782a6d34eeaf0a3763e809ed11bb51b7117994e10f291a7101393a7f784, receipts_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, log_bloomgas_used: 0, gas_limit: 18446744073709551615, proof: , hash: HashWrap(Cell { value: Some(30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa) }), version: 0 }, body: BlockBody { transactions: [] } } }
node1    | 20171025 03:06:38 - INFO - config check: Config { check_permission: true }
node1    | 20171025 03:06:38 - INFO - init status 0, [48, 168, 205, 145, 131, 40, 73, 210, 250, 17, 173, 172, 86, 13, 83, 162, 84, 216, 38, 27, 119, 118, 11, 189, 17, 63, 21, 145, 127, 234, 64, 250]
node3    | 20171025 03:06:45 - INFO - sync_status 30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa, 0
node0    | 20171025 03:06:45 - INFO - sync_status 30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa, 0
node2    | 20171025 03:06:45 - INFO - sync_status 30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa, 0
node1    | 20171025 03:06:46 - INFO - sync_status 30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa, 0
node2    | 20171025 03:06:50 - INFO - chain update 1
node3    | 20171025 03:06:50 - INFO - chain update 1
node0    | 20171025 03:06:50 - INFO - chain update 1
node1    | 20171025 03:06:50 - INFO - chain update 1
node2    | 20171025 03:06:52 - INFO - chain update 2
node1    | 20171025 03:06:52 - INFO - chain update 2
node3    | 20171025 03:06:52 - INFO - chain update 2
node0    | 20171025 03:06:52 - INFO - chain update 2
node2    | 20171025 03:06:54 - INFO - chain update 3
node0    | 20171025 03:06:54 - INFO - chain update 3
node3    | 20171025 03:06:54 - INFO - chain update 3
node1    | 20171025 03:06:54 - INFO - chain update 3

#关闭节点

# stop single node
docker-compose stop node0

关闭 node0，成功，其他3个节点顺利进行共识：
cpt@cryptape-server:~/cita$ docker-compose stop node0

Stopping node0 ... done

显示如下：
node1    | 20171025 03:11:49 - INFO - chain update 125
node3    | 20171025 03:11:49 - INFO - chain update 125
node2    | 20171025 03:11:49 - INFO - chain update 125
node1    | 20171025 03:11:51 - INFO - chain update 126
node2    | 20171025 03:11:51 - INFO - chain update 126
node3    | 20171025 03:11:52 - INFO - chain update 126
node2    | 20171025 03:11:54 - INFO - chain update 127
node1    | 20171025 03:11:54 - INFO - chain update 127
node3    | 20171025 03:11:54 - INFO - chain update 127
node0 exited with code 137
node1    | 20171025 03:11:59 - INFO - chain update 128
node3    | 20171025 03:11:59 - INFO - chain update 128
node2    | 20171025 03:11:59 - INFO - chain update 128
node2    | 20171025 03:12:01 - INFO - chain update 129
node1    | 20171025 03:12:01 - INFO - chain update 129
node3    | 20171025 03:12:01 - INFO - chain update 129
node2    | 20171025 03:12:03 - INFO - chain update 130
node3    | 20171025 03:12:03 - INFO - chain update 130
node1    | 20171025 03:12:03 - INFO - chain update 130

# stop single node
docker-compose stop node1

关闭 node1，由于之前已经关闭了 node0，可以发现 node2 和 node3 已经停止共识，停留在 update 153，good：
cpt@cryptape-server:~/cita$ docker-compose stop node1
Stopping node1 ... done

显示如下：
node3    | 20171025 03:13:02 - INFO - chain update 151
node1    | 20171025 03:13:02 - INFO - chain update 151
node2    | 20171025 03:13:02 - INFO - chain update 151
node1    | 20171025 03:13:07 - INFO - chain update 152
node2    | 20171025 03:13:07 - INFO - chain update 152
node3    | 20171025 03:13:07 - INFO - chain update 152
node1    | 20171025 03:13:09 - INFO - chain update 153
node2    | 20171025 03:13:09 - INFO - chain update 153
node3    | 20171025 03:13:09 - INFO - chain update 153
node1 exited with code 137
node2    | 20171025 03:13:17 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153
node3    | 20171025 03:13:17 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153
node2    | 20171025 03:13:25 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153
node3    | 20171025 03:13:25 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153

# stop single node
docker-compose stop node2

再关闭 node2，可以看到唯一一个没有关闭的节点 node3 仍然停止共识：
cpt@cryptape-server:~/cita$ docker-compose stop node2
Stopping node2 ... done

显示如下：
node3    | 20171025 03:13:50 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153
node2    | 20171025 03:13:50 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153
node3    | 20171025 03:13:58 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153

# start single node
docker-compotse start node0

重新启动 node0，出现报错，最后找到原因，是操作文档里多了一个字母 t，更正后成功启动：
cpt@cryptape-server:~/cita$ docker-compotse start node0
No command 'docker-compotse' found, did you mean:
 Command 'docker-compose' from package 'docker-compose' (universe)
docker-compotse: command not found
cpt@cryptape-server:~/cita$ docker-compose start node0
Starting node0 ... done

显示如下，日志内容还是略多：
node0    | 20171025 03:06:32 - INFO - CITA:chain
node0    | 20171025 03:06:33 - INFO - Session initialized
node0    | 20171025 03:06:34 - INFO - Session initialized
node0    | 20171025 03:06:37 - WARN - not expected get_chain.
node0    | 20171025 03:06:37 - INFO - **** begin **** 
node0    | 
node0    | 20171025 03:06:37 - INFO - chain first init, to do init contracts on height eq zero
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x01", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6", result = Ok(0000000000000000000000000dbd369a741319fa5107733e2c9db9929093e3c7)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x00", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563", result = Ok(0000000000000000000000001a702a25c6bca72b67987968f0bfb3a3213c5688)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a4, key = "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd", result = Ok(00000000000000000000000000000000000000000000000000000000017fa158)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x05", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b", result = Ok(000000000000000000000000d3f1a71d1d8f073f4e725f57bbe14d67da22f888)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0", result = Ok(0000000000000000000000000000000000000000000000000000000003a921f6)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x04", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a3, key = "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c", result = Ok(000000000000000000000000532c1400cb002e380da563b918ee607a08a7f5bb)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e", result = Ok(000000000000000000000000a7013f3417eb7427dfb8bc2acd940017ac778407)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e", result = Ok(0000000000000000000000000000000000000000000000000000000000000001)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x03", result = Ok(0000000000000000000000000000000000000000000000000000000000000004)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d", result = Ok(000000000000000000000000c627b88e1bfe6603644600571e87c31e5c38803d)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b", result = Ok(000000000000000000000000196b6a16488467730756c895943bc43e1e0b0473)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - address = 00000000000000000000000000000000013241a2, key = "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c", result = Ok(0000000000000000000000000000000000000000000000000000000000000002)
node0    | 20171025 03:06:37 - INFO - **** end **** 
node0    | 
node0    | 20171025 03:06:37 - INFO - init genesis Genesis { spec: Spec { alloc: {"0x00000000000000000000000000000000013241a4": Contract { nonce: "1", code: "0x606060405263ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663301da870811461006857806354ad6352146100a15780636f4eaf7a146100d6578063c390355c14610166578063dd8a8a05146101a957600080fd5b341561007357600080fd5b61008d600160a060020a036004351660ff602435166101ce565b604051901515815260200160405180910390f35b34156100ac57600080fd5b6100c0600160a060020a036004351661036e565b60405160ff909116815260200160405180910390f35b34156100e157600080fd5b6100ef60ff6004351661039e565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561012b578082015183820152602001610113565b50505050905090810190601f1680156101585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017157600080fd5b610185600160a060020a0360043516610489565b6040518082600281111561019557fe5b60ff16815260200191505060405180910390f35b34156101b457600080fd5b61008d600160a060020a036004351660ff6024351661049e565b600160a060020a033316600090815260026020819052604082205460ff16908111156101f657fe5b60ff168260ff1611806102365750600160a060020a03831660009081526002602081905260409091205460ff169081111561022d57fe5b60ff168260ff16105b1561024357506000610368565b60ff8216600114156102af576000805460018101610261838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002905260409020805460ff191660011790555b60ff82166002141561031d57600180548082016102cc838261099f565b506000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915582526002908190526040909120805460ff191690911790555b7fca571b17c94502f9fcce67874fd8e4ac41a6139e5dd6f79836393bcc12a0e7658383604051600160a060020a03909216825260ff1660208201526040908101905180910390a15060015b92915050565b600160a060020a038116600090815260026020819052604082205460ff169081111561039657fe5b90505b919050565b6103a66109c8565b60ff82166001141561041c57610415600080548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116103ed575b50505050506105d2565b9050610399565b60ff82166002141561039957610415600180548060200260200160405190810160405280929190818152602001828054801561040b57602002820191906000526020600020908154600160a060020a031681526001909101906020018083116103ed5750505050506105d2565b60026020526000908152604090205460ff1681565b600160a060020a033316600090815260026020819052604082205460ff16908111156104c657fe5b60ff168260ff1611806105075750600160a060020a03831660009081526002602081905260409091205460ff16908111156104fd57fe5b60ff168260ff1614155b80610523575082600160a060020a031633600160a060020a0316145b1561053057506000610368565b600160a060020a0383166000908152600260205260409020805460ff1916905560ff82166001141561056957610567836000610653565b505b60ff82166002141561058257610580836001610653565b505b7f76a0b4b4ddd449a15dd0e157534f1220234491c2643c254ead34327e6f51952e8383604051600160a060020a03909216825260ff1660208201526040908101905180910390a150600192915050565b6105da6109c8565b6000808351111561060757610604836000815181106105f557fe5b906020019060200201516107aa565b91505b5060015b825181101561064d5761064361062e6106298584815181106105f557fe5b610877565b61063784610877565b9063ffffffff61089f16565b915060010161060b565b50919050565b60008060006106bb85858054806020026020016040519081016040528092919081815260200182805480156106b157602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610693575b5050505050610907565b845490925082106106cf57600092506107a2565b50805b8354600019018110156107545783816001018154811015156106f057fe5b6000918252602090912001548454600160a060020a039091169085908390811061071657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016106d2565b83548490600019810190811061076657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055835461079c85600019830161099f565b50600192505b505092915050565b6107b26109c8565b6107ba6109c8565b600060146040518059106107cb5750595b90808252806020026020018201604052509150600090505b6014811015610870578060130360080260020a84600160a060020a031681151561080957fe5b047f01000000000000000000000000000000000000000000000000000000000000000282828151811061083857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001016107e3565b5092915050565b61087f6109da565b602082016040805190810160405280845181526020019190915292915050565b6108a76109c8565b6108af6109c8565b600083518551016040518059106108c35750595b908082528060200260200182016040525091506020820190506108ec818660200151875161095a565b6108ff855182018560200151865161095a565b509392505050565b6000805b82518110156109535782818151811061092057fe5b90602001906020020151600160a060020a031684600160a060020a0316141561094b57809150610870565b60010161090b565b9392505050565b60005b60208210610980578251845260208401935060208301925060208203915061095d565b6001826020036101000a03905080198351168185511617909352505050565b8154818355818115116109c3576000838152602090206109c39181019083016109f1565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b610a0f91905b80821115610a0b57600081556001016109f7565b5090565b905600a165627a7a72305820dc9dc86fa1ff557a0ae74b02c4963d68c4935924d3dbf19a4d920078ef0d120d0029", storage: {"0x01": "0x01", "0x1e52775bcfc73fbd1461f01b3e0c78835b8cc582102dea3ea3f1950af1bb0039": "0x01", "0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6": "0x0dbd369a741319fa5107733e2c9db9929093e3c7", "0x00": "0x01", "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563": "0x1a702a25c6bca72b67987968f0bfb3a3213c5688", "0x0ab88927725d686ee9cd9eb135e6a770afffea87697704b904486e7c1730bf37": "0x02"} }, "0x00000000000000000000000000000000013241a3": Contract { nonce: "1", code: "0x606060405236156100cd5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100d25780633a5b5cf31461010557806350f2ee971461012a57806354f6127f1461014f5780636cf729481461016557806370480275146101ef578063748ba8dd1461020e578063776dd3b6146102295780637a490f7e14610248578063a69257f31461025b578063c9bcec7714610271578063dae99b3a14610287578063dfa874251461029a578063eb93eddf146102bc575b600080fd5b34156100dd57600080fd5b6100f1600160a060020a03600435166102d5565b604051901515815260200160405180910390f35b341561011057600080fd5b6101186102f7565b60405190815260200160405180910390f35b341561013557600080fd5b6100f1600160a060020a0360043516602435604435610346565b341561015a57600080fd5b6101186004356103d5565b341561017057600080fd5b610178610411565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101b457808201518382015260200161019c565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101fa57600080fd5b6100f1600160a060020a0360043516610481565b341561021957600080fd5b6100f16004356024351515610500565b341561023457600080fd5b610118600160a060020a0360043516610582565b341561025357600080fd5b61017861062e565b341561026657600080fd5b6100f1600435610690565b341561027c57600080fd5b6100f1600435610771565b341561029257600080fd5b61011861083e565b34156102a557600080fd5b6100f1600160a060020a036004351660243561087a565b34156102c757600080fd5b6100f16004356024356109b6565b600160a060020a03811660009081526020819052604090205460ff165b919050565b7f626c6f636b4761734c696d69740000000000000000000000000000000000000060005260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7545b90565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380851660008181526003602090815260408083208884529091529081902085905533909216918591907f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578799086905190815260200160405180910390a45060019392505050565b60008181526001602052604081205460ff161561040157506000818152600260205260409020546102f2565b61040a82610a2c565b90506102f2565b610419610e22565b61047c600480548060200260200160405190810160405280929190818152602001828054801561047257602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610454575b5050505050610a98565b905090565b600160a060020a03331660009081526020819052604081205460ff16156100cd57600160a060020a0380831660008181526020819052604090819020805460ff1916600117905533909216917f224c2f3a0794342c616e2e1c9fdfac78b745825dd090fb47bd157a9287b24efc905160405180910390a35060016102f2565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526001602052604090819020805460ff191684151590811790915533600160a060020a03169185907f05b4a832711fc3318602fc0b4685ea4629b1bae830a0bdab94856389173a7217905160405180910390a45060015b92915050565b600160a060020a0381166000908152600360209081526040808320600080516020610e93833981519152845290915281205415156105f95750600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd546102f2565b50600160a060020a03166000908152600360209081526040808320600080516020610e93833981519152845290915290205490565b610636610e22565b61047c600580548060200260200160405190810160405280929190818152602001828054801561068657602002820191906000526020600020905b81548152600190910190602001808311610671575b5050505050610b13565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806106ce57508083105b156106d857600080fd5b7f626c6f636b4761734c696d697400000000000000000000000000000000000000600081905260026020527ff2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a4600194505050505b50919050565b600160a060020a033316600090815260208190526040812054819060ff16156100cd5782677fffffffffffffff623fffff818311806107af57508083105b156107b957600080fd5b600080516020610e93833981519152600081905260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd879055869450600160a060020a0333169085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db60405160405180910390a46001945050505061076b565b600080516020610e9383398151915260005260026020527f58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd5490565b600160a060020a0333166000908152602081905260408120548190819060ff16156100cd5783677fffffffffffffff623fffff818311806108ba57508083105b156108c457600080fd5b600160a060020a0388166000908152600360209081526040808320600080516020610e9383398151915280855292529091208890556004805491965088955090600181016109128382610e34565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038a1617905560058054600181016109568382610e34565b506000918252602090912001849055600160a060020a033381169086908a167f7ddd21e3eb509c0bae799b206e25db8f77928f1f1bd6364c2166f1b7429578798760405190815260200160405180910390a4506001979650505050505050565b600160a060020a03331660009081526020819052604081205460ff16156100cd5760008381526002602052604090819020839055600160a060020a03331690839085907f8b477181257c0ad079608a1cd6f3031245b413eb3036d8e12c1038b3a5dfe9db905160405180910390a450600161057c565b600160a060020a0333166000908152600360209081526040808320848452909152812054819015610a8257600160a060020a0333166000908152600360209081526040808320868452909152902054915061076b565b600083815260026020526040902054915061076b565b610aa0610e22565b60008083511115610acd57610aca83600081518110610abb57fe5b90602001906020020151610b74565b91505b5060015b825181101561076b57610b09610af4610aef858481518110610abb57fe5b610c0d565b610afd84610c0d565b9063ffffffff610c3516565b9150600101610ad1565b610b1b610e22565b60008083511115610b4857610b4583600081518110610b3657fe5b90602001906020020151610c9d565b91505b5060015b825181101561076b57610b6a610af4610aef858481518110610b3657fe5b9150600101610b4c565b610b7c610e22565b610b84610e22565b60006014604051805910610b955750595b90808252806020026020018201604052509150600090505b6014811015610c06578060130360080260020a84600160a060020a0316811515610bd357fe5b0460f860020a02828281518110610be657fe5b906020010190600160f860020a031916908160001a905350600101610bad565b5092915050565b610c15610e5d565b602082016040805190810160405280845181526020019190915292915050565b610c3d610e22565b610c45610e22565b60008351855101604051805910610c595750595b90808252806020026020018201604052509150602082019050610c828186602001518751610ddd565b610c958551820185602001518651610ddd565b509392505050565b610ca5610e22565b610cad610e22565b6000806000610cba610e22565b6020604051805910610cc95750595b9080825280602002602001820160405250945060009350600092505b6020831015610d58576008830260020a870291507fff00000000000000000000000000000000000000000000000000000000000000821615610d4d5781858581518110610d2e57fe5b906020010190600160f860020a031916908160001a9053506001909301925b600190920191610ce5565b83604051805910610d665750595b90808252806020026020018201604052509050600092505b83831015610dd357848381518110610d9257fe5b016020015160f860020a900460f860020a02818481518110610db057fe5b906020010190600160f860020a031916908160001a905350600190920191610d7e565b9695505050505050565b60005b60208210610e035782518452602084019350602083019250602082039150610de0565b6001826020036101000a03905080198351168185511617909352505050565b60206040519081016040526000815290565b815481835581811511610e5857600083815260209020610e58918101908301610e74565b505050565b604080519081016040526000808252602082015290565b61034391905b80821115610e8e5760008155600101610e7a565b509056006163636f756e744761734c696d69740000000000000000000000000000000000a165627a7a72305820f7d8d2eb3301013b121c0ebcd2f8cc73e5b88f1d114d0774765447ae148303240029", storage: {"0x58ddd2672d63bf64ee02ab592b9f5fe185e37dd506abbaabffec0666b59d93cd": "0x017fa158", "0x05": "0x01", "0x3bf8fd164ffa0f1e57fcf0b250deb6d6955de42d4084cc3ccf99c324fca1017a": "0x03a921f6", "0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b": "0xd3f1a71d1d8f073f4e725f57bbe14d67da22f888", "0xe15c8207c4f361b292e24517814640fcc660a01cc4ee9354f13dee282b700b8d": "0x01", "0xf2f8825359b20db9ed2a3fcc1d99e7634f74c3f029b821c88409b6145bf1fed7": "0x03a921f6", "0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0": "0x03a921f6", "0x04": "0x01", "0x181e6d11483c3284805b844a9b33f9ff4509eb47467e8ea763ae424fb1202682": "0x01"} }, "0x00000000000000000000000000000000013241a2": Contract { nonce: "1", code: "0x6060604052361561008b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166324d7806c81146100905780632d4ede93146100c357806330ccebb5146100e2578063609df32f14610117578063645b8b1b146101a157806370480275146101e4578063dd4c97a014610203578063ddad2ffe14610222575b600080fd5b341561009b57600080fd5b6100af600160a060020a0360043516610241565b604051901515815260200160405180910390f35b34156100ce57600080fd5b6100af600160a060020a0360043516610263565b34156100ed57600080fd5b610101600160a060020a036004351661044a565b60405160ff909116815260200160405180910390f35b341561012257600080fd5b61012a610477565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561016657808201518382015260200161014e565b50505050905090810190601f1680156101935780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ac57600080fd5b6101c0600160a060020a03600435166104e8565b604051808260028111156101d057fe5b60ff16815260200191505060405180910390f35b34156101ef57600080fd5b6100af600160a060020a03600435166104fd565b341561020e57600080fd5b6100af600160a060020a036004351661057f565b341561022d57600080fd5b6100af600160a060020a03600435166106b6565b600160a060020a03811660009081526001602052604090205460ff165b919050565b600160a060020a0333166000908152600160205260408120548190819060ff161561008b574360009081526002602052604090205460ff16151561008b576002600160a060020a03851660009081526020819052604090205460ff1660028111156102ca57fe5b146102d85760009250610443565b6102e18461078a565b60035490925082106102f65760009250610443565b50600160a060020a0383166000908152602081905260409020805460ff19169055805b6003546000190181101561039c57600380546001830190811061033857fe5b60009182526020909120015460038054600160a060020a03909216918390811061035e57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600101610319565b6003805460001981019081106103ae57fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916905560038054906103e79060001983016109fc565b504360009081526002602052604090819020805460ff191690557f74976f07ac4bfb6a02b2dbd3bc158d4984ee6027d938e870692126ca9e1931d590859051600160a060020a03909116815260200160405180910390a1600192505b5050919050565b600160a060020a03811660009081526020819052604081205460ff16600281111561047157fe5b92915050565b61047f610a25565b6104e260038054806020026020016040519081016040528092919081815260200182805480156104d857602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116104ba575b50505050506107df565b90505b90565b60006020819052908152604090205460ff1681565b600160a060020a03331660009081526001602052604081205460ff161561008b57600160a060020a03808316600081815260016020819052604091829020805460ff1916909117905533909216917f99ad91c72e4fcc0a37d0481b982aec5c0c78491d30d39e65338bec15fa9cc4b7905160405180910390a35060015b61025e565b600160a060020a03331660009081526001602052604081205460ff161561008b574360009081526002602052604090205460ff16151561008b576001600160a060020a03831660009081526020819052604090205460ff1660028111156105e257fe5b146105ef575060006106b1565b600160a060020a0382166000908152602081815260408083208054600260ff199182168117909255438552925290912080549091166001908117909155600380549091810161063e83826109fc565b506000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0384161790557f5d55f24dd047ef52a5f36ddefc8c424e4b26c8415d8758be1bbb88b5c65e04eb82604051600160a060020a03909116815260200160405180910390a15060015b61057a565b60006001600160a060020a03831660009081526020819052604090205460ff1660028111156106e157fe5b148061071357506002600160a060020a03831660009081526020819052604090205460ff16600281111561071157fe5b145b156107205750600061025e565b600160a060020a03821660009081526020819052604090819020805460ff191660011790557ffd96b5bdd2e0412ade018159455c7af2bed1366ab61906962a1b5638f29c68c190839051600160a060020a03909116815260200160405180910390a1506001919050565b6000805b6003548110156107d55760038054829081106107a657fe5b600091825260209091200154600160a060020a03848116911614156107cd578091506107d9565b60010161078e565b8091505b50919050565b6107e7610a25565b60008083511115610814576108118360008151811061080257fe5b9060200190602002015161085a565b91505b5060015b82518110156107d95761085061083b61083685848151811061080257fe5b610927565b61084484610927565b9063ffffffff61094f16565b9150600101610818565b610862610a25565b61086a610a25565b6000601460405180591061087b5750595b90808252806020026020018201604052509150600090505b6014811015610920578060130360080260020a84600160a060020a03168115156108b957fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106108e857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600101610893565b5092915050565b61092f610a37565b602082016040805190810160405280845181526020019190915292915050565b610957610a25565b61095f610a25565b600083518551016040518059106109735750595b9080825280602002602001820160405250915060208201905061099c81866020015187516109b7565b6109af85518201856020015186516109b7565b509392505050565b60005b602082106109dd57825184526020840193506020830192506020820391506109ba565b6001826020036101000a03905080198351168185511617909352505050565b815481835581811511610a2057600083815260209020610a20918101908301610a4e565b505050565b60206040519081016040526000815290565b604080519081016040526000808252602082015290565b6104e591905b80821115610a685760008155600101610a54565b50905600a165627a7a7230582051c9a7e853bbdee43a2a15e229e58b1470ad267263a5eab4aac5d646c2031ddb0029", storage: {"0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c": "0x532c1400cb002e380da563b918ee607a08a7f5bb", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e": "0xa7013f3417eb7427dfb8bc2acd940017ac778407", "0x57e3a69976c2f392fd0a7f83251fcba251dbfbc6674e53ceb071f8fff100e10e": "0x01", "0xaed4bee591dd6329a80771669010b02c1833b424f390854665947c29cf9e84e5": "0x02", "0x03": "0x04", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d": "0xc627b88e1bfe6603644600571e87c31e5c38803d", "0x1a9f17ffc061c61bdbd4fe73a7560642c159e08b3d6d88c53f88031bfb91f4bc": "0x02", "0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b": "0x196b6a16488467730756c895943bc43e1e0b0473", "0x756a16a8f314c6d33834cae745e18edf724343d33792152b49a644f368ed4f83": "0x02", "0x1ce4cadd7dc2c7d8ab15b6df4630fe881bda869b8ca34430ac584f545b9f924c": "0x02"} }}, prevhash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266 }, block: Block { header: Header { parent_hash: 0000000000000000000000000000000000000000000000000000000000000000, timestamp: 1508900266, number: 0, transactions_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, state_root: 32b1d782a6d34eeaf0a3763e809ed11bb51b7117994e10f291a7101393a7f784, receipts_root: 56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421, log_bloomgas_used: 0, gas_limit: 18446744073709551615, proof: , hash: HashWrap(Cell { value: Some(30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa) }), version: 0 }, body: BlockBody { transactions: [] } } }
node0    | 20171025 03:06:37 - INFO - config check: Config { check_permission: true }
node0    | 20171025 03:06:37 - INFO - init status 0, [48, 168, 205, 145, 131, 40, 73, 210, 250, 17, 173, 172, 86, 13, 83, 162, 84, 216, 38, 27, 119, 118, 11, 189, 17, 63, 21, 145, 127, 234, 64, 250]
node0    | 20171025 03:06:45 - INFO - sync_status 30a8cd91832849d2fa11adac560d53a254d8261b77760bbd113f15917fea40fa, 0
node0    | 20171025 03:06:50 - INFO - chain update 1
node0    | 20171025 03:06:52 - INFO - chain update 2
node0    | 20171025 03:06:54 - INFO - chain update 3
node0    | 20171025 03:06:56 - INFO - chain update 4
node0    | 20171025 03:06:58 - INFO - chain update 5
node0    | 20171025 03:07:00 - INFO - chain update 6
node0    | 20171025 03:07:02 - INFO - chain update 7
node0    | 20171025 03:07:04 - INFO - chain update 8
node0    | 20171025 03:07:06 - INFO - chain update 9
node0    | 20171025 03:07:08 - INFO - chain update 10
node0    | 20171025 03:07:10 - INFO - chain update 11
node0    | 20171025 03:07:12 - INFO - chain update 12
node0    | 20171025 03:07:14 - INFO - chain update 13
node0    | 20171025 03:07:16 - INFO - chain update 14
node0    | 20171025 03:07:18 - INFO - chain update 15
node0    | 20171025 03:07:20 - INFO - chain update 16
node0    | 20171025 03:07:22 - INFO - chain update 17
node0    | 20171025 03:07:24 - INFO - chain update 18
node0    | 20171025 03:07:26 - INFO - chain update 19
node0    | 20171025 03:07:28 - INFO - chain update 20
node0    | 20171025 03:07:30 - INFO - chain update 21
node0    | 20171025 03:07:32 - INFO - chain update 22
node0    | 20171025 03:07:34 - INFO - chain update 23
node0    | 20171025 03:07:36 - INFO - chain update 24
node0    | 20171025 03:07:38 - INFO - chain update 25
node0    | 20171025 03:07:40 - INFO - chain update 26
node0    | 20171025 03:07:42 - INFO - chain update 27
node0    | 20171025 03:07:44 - INFO - chain update 28
node0    | 20171025 03:07:46 - INFO - chain update 29
node0    | 20171025 03:07:48 - INFO - chain update 30
node0    | 20171025 03:07:50 - INFO - chain update 31
node0    | 20171025 03:07:53 - INFO - chain update 32
node0    | 20171025 03:07:59 - INFO - chain update 33
node0    | 20171025 03:08:03 - INFO - chain update 34
node0    | 20171025 03:08:10 - INFO - chain update 35
node0    | 20171025 03:08:12 - INFO - chain update 36
node0    | 20171025 03:08:14 - INFO - chain update 37
node0    | 20171025 03:08:16 - INFO - chain update 38
node0    | 20171025 03:08:18 - INFO - chain update 39
node0    | 20171025 03:08:20 - INFO - chain update 40
node0    | 20171025 03:08:22 - INFO - chain update 41
node0    | 20171025 03:08:24 - INFO - chain update 42
node0    | 20171025 03:08:26 - INFO - chain update 43
node0    | 20171025 03:08:28 - INFO - chain update 44
node0    | 20171025 03:08:31 - INFO - chain update 45
node0    | 20171025 03:08:33 - INFO - chain update 46
node0    | 20171025 03:08:36 - INFO - chain update 47
node0    | 20171025 03:08:38 - INFO - chain update 48
node0    | 20171025 03:08:40 - INFO - chain update 49
node0    | 20171025 03:08:42 - INFO - chain update 50
node0    | 20171025 03:08:44 - INFO - chain update 51
node0    | 20171025 03:08:46 - INFO - chain update 52
node0    | 20171025 03:08:48 - INFO - chain update 53
node0    | 20171025 03:08:50 - INFO - chain update 54
node0    | 20171025 03:08:52 - INFO - chain update 55
node0    | 20171025 03:08:54 - INFO - chain update 56
node0    | 20171025 03:08:56 - INFO - chain update 57
node0    | 20171025 03:09:01 - INFO - chain update 58
node0    | 20171025 03:09:04 - INFO - chain update 59
node0    | 20171025 03:09:06 - INFO - chain update 60
node0    | 20171025 03:09:08 - INFO - chain update 61
node0    | 20171025 03:09:10 - INFO - chain update 62
node0    | 20171025 03:09:18 - INFO - sync_status 87982ebf8fb40b7865522eee67ab12aad3732733464eed1ff59f640ef1196f77, 62
node0    | 20171025 03:09:25 - INFO - chain update 63
node0    | 20171025 03:09:32 - INFO - chain update 64
node0    | 20171025 03:09:37 - INFO - chain update 65
node0    | 20171025 03:09:39 - INFO - chain update 66
node0    | 20171025 03:09:41 - INFO - chain update 67
node0    | 20171025 03:09:43 - INFO - chain update 68
node0    | 20171025 03:09:45 - INFO - chain update 69
node0    | 20171025 03:09:47 - INFO - chain update 70
node0    | 20171025 03:09:49 - INFO - chain update 71
node0    | 20171025 03:09:51 - INFO - chain update 72
node0    | 20171025 03:09:54 - INFO - chain update 73
node0    | 20171025 03:09:56 - INFO - chain update 74
node0    | 20171025 03:09:58 - INFO - chain update 75
node0    | 20171025 03:10:00 - INFO - chain update 76
node0    | 20171025 03:10:02 - INFO - chain update 77
node0    | 20171025 03:10:04 - INFO - chain update 78
node0    | 20171025 03:10:06 - INFO - chain update 79
node0    | 20171025 03:10:09 - INFO - chain update 80
node0    | 20171025 03:10:11 - INFO - chain update 81
node0    | 20171025 03:10:13 - INFO - chain update 82
node0    | 20171025 03:10:15 - INFO - chain update 83
node0    | 20171025 03:10:17 - INFO - chain update 84
node0    | 20171025 03:10:20 - INFO - chain update 85
node0    | 20171025 03:10:22 - INFO - chain update 86
node0    | 20171025 03:10:25 - INFO - chain update 87
node0    | 20171025 03:10:28 - INFO - chain update 88
node0    | 20171025 03:10:30 - INFO - chain update 89
node0    | 20171025 03:10:36 - INFO - chain update 90
node0    | 20171025 03:10:39 - INFO - chain update 91
node0    | 20171025 03:10:41 - INFO - chain update 92
node0    | 20171025 03:10:43 - INFO - chain update 93
node0    | 20171025 03:10:45 - INFO - chain update 94
node0    | 20171025 03:10:48 - INFO - chain update 95
node0    | 20171025 03:10:50 - INFO - chain update 96
node0    | 20171025 03:10:52 - INFO - chain update 97
node0    | 20171025 03:10:54 - INFO - chain update 98
node0    | 20171025 03:10:56 - INFO - chain update 99
node0    | 20171025 03:10:58 - INFO - chain update 100
node0    | 20171025 03:11:00 - INFO - chain update 101
node0    | 20171025 03:11:02 - INFO - chain update 102
node0    | 20171025 03:11:04 - INFO - chain update 103
node0    | 20171025 03:11:06 - INFO - chain update 104
node0    | 20171025 03:11:09 - INFO - chain update 105
node0    | 20171025 03:11:11 - INFO - chain update 106
node0    | 20171025 03:11:13 - INFO - chain update 107
node0    | 20171025 03:11:15 - INFO - chain update 108
node0    | 20171025 03:11:17 - INFO - chain update 109
node0    | 20171025 03:11:19 - INFO - chain update 110
node0    | 20171025 03:11:21 - INFO - chain update 111
node0    | 20171025 03:11:23 - INFO - chain update 112
node0    | 20171025 03:11:25 - INFO - chain update 113
node0    | 20171025 03:11:27 - INFO - chain update 114
node0    | 20171025 03:11:29 - INFO - chain update 115
node0    | 20171025 03:11:31 - INFO - chain update 116
node0    | 20171025 03:11:33 - INFO - chain update 117
node0    | 20171025 03:11:35 - INFO - chain update 118
node0    | 20171025 03:11:37 - INFO - chain update 119
node0    | 20171025 03:11:39 - INFO - chain update 120
node0    | 20171025 03:11:41 - INFO - chain update 121
node0    | 20171025 03:11:43 - INFO - chain update 122
node0    | 20171025 03:11:45 - INFO - chain update 123
node3    | 20171025 03:15:34 - INFO - sync_status 7f1ea3126149396ae67e75396b2c24782b30a7acf71614079a3ee661bdc4fc9b, 153
node0    | 20171025 03:11:27 - INFO - chain update 114
node0    | 20171025 03:11:29 - INFO - chain update 115
node0    | 20171025 03:11:31 - INFO - chain update 116
node0    | 20171025 03:11:33 - INFO - chain update 117
node0    | 20171025 03:11:35 - INFO - chain update 118
node0    | 20171025 03:11:37 - INFO - chain update 119
node0    | 20171025 03:11:39 - INFO - chain update 120
node0    | 20171025 03:11:41 - INFO - chain update 121
node0    | 20171025 03:11:43 - INFO - chain update 122
node0    | 20171025 03:11:45 - INFO - chain update 123
node0    | 20171025 03:15:38 - INFO - CITA:chain
node0    | thread 'main' panicked at 'failed to open url amqp://guest:guest@localhost/node0 : IoError(AddrNotAvailable)', share_libs/pubsub_rabbitmq/src/lib.rs:47:22
node0    | stack backtrace:
node0    |    0:     0x5600c1313ec3 - std::sys::imp::backtrace::tracing::imp::unwind_backtrace::he5671f0b30a644fa
node0    |                                at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
node0    |    1:     0x5600c1310114 - std::sys_common::backtrace::_print::h7c2f4c881d6d5b3e
node0    |                                at /checkout/src/libstd/sys_common/backtrace.rs:71
node0    |    2:     0x5600c1317943 - std::panicking::default_hook::{{closure}}::h3d08f23a0c94adce
node0    |                                at /checkout/src/libstd/sys_common/backtrace.rs:60
node0    |                                at /checkout/src/libstd/panicking.rs:380
node0    |    3:     0x5600c13176b4 - std::panicking::default_hook::hc117e137e1009421
node0    |                                at /checkout/src/libstd/panicking.rs:396
node0    |    4:     0x5600c10e51ed - util::panichandler::set_panic_handler::{{closure}}::h7de99158a94ea132
node0    |    5:     0x5600c1317e86 - std::panicking::rust_panic_with_hook::he2b5316090935f37
node0    |                                at /checkout/src/libstd/panicking.rs:611
node0    |    6:     0x5600c1317d14 - std::panicking::begin_panic::hcf31510a1bec24d8
node0    |                                at /checkout/src/libstd/panicking.rs:571
node0    |    7:     0x5600c1317c19 - std::panicking::begin_panic_fmt::he1d66531f3481183
node0    |                                at /checkout/src/libstd/panicking.rs:521
node0    |    8:     0x5600c12b05a6 - pubsub_rabbitmq::start_rabbitmq::hf667957713798bf6
node0    |    9:     0x5600c0f17c64 - pubsub::start_pubsub::hb91cd23b3e7f04c9
node0    |   10:     0x5600c0e624c3 - chain::main::hae0b276b2bf67e77
node0    |   11:     0x5600c131edec - __rust_maybe_catch_panic
node0    |                                at /checkout/src/libpanic_unwind/lib.rs:98
node0    |   12:     0x5600c131855b - std::rt::lang_start::h83d6dc3565cd1d38
node0    |                                at /checkout/src/libstd/panicking.rs:458
node0    |                                at /checkout/src/libstd/panic.rs:361
node0    |                                at /checkout/src/libstd/rt.rs:61
node0    |   13:     0x7f69521fb82f - __libc_start_main
node0    |   14:     0x5600c0e1a0c8 - _start
node0    |   15:                0x0 - <unknown>

# stop all nodes
docker-compose down 

关闭所有节点， stop 之后自动完成了 remove 动作：
cpt@cryptape-server:~/cita$ docker-compose down
Stopping node2 ... done
Stopping node1 ... done
Stopping node3 ... done
Stopping node0 ... done
Removing node2 ... done
Removing node1 ... done
Removing node3 ... done
Removing node0 ... done
Removing cita_admin_run_1 ... done
Removing network cita_main

4 个节点全部停止，cool! 
node2 exited with code 137
node1 exited with code 137
node0 exited with code 137
node3 exited with code 137
